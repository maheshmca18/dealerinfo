<modification>

	<id>Import Product data</id>
	<version>1.0</version>
	<vqmver>2.3.2 +</vqmver>
	<author>IRS</author>
	 
<!-- Language -->

	<file name="admin/language/english/english.php">
		<operation>
			<search position="after" offset="0"><![CDATA[$_['button_approve']          = 'Approve';]]></search>
			<add><![CDATA[$_['button_import']                = 'Import';]]></add>
		</operation>
	</file>
	
	
<!-- product -->    
<!-- Controller --> 
  
    <file name="admin/controller/catalog/product.php">
	<operation>
			<search position="before" offset="0"><![CDATA[$this->data['button_insert'] = $this->language->get('button_insert');]]></search>
            <add><![CDATA[$this->data['button_import'] = $this->language->get('button_import');
			$this->data['import'] = $this->url->link('catalog/product/import', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></add>
		</operation>  
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function insert() {]]></search>
			<add><![CDATA[
	public function import() {
		
		$excel_field_error = 0;
		$_SESSION['productlist']=array();
	
		$this->language->load('catalog/product');
		
		$this->load->model('catalog/product');
		$this->load->model('catalog/category');
		$this->load->model('catalog/manufacturer');
		$this->load->model('localisation/stock_status');
		$this->load->model('localisation/length_class');
		$this->load->model('localisation/weight_class');
		$this->load->model('localisation/tax_class');
		$this->load->model('tool/image');
		
		$this->data['heading_title'] = "Import Product Data";

		$this->data['entry_import'] = $this->language->get('Upload CSV File');
		
		$this->data['entry_insertonly'] = $this->language->get('Insert Only');	
				
		$this->data['action'] = $this->url->link('catalog/product/import', 'token=' . $this->session->data['token'], 'SSL');
		
		$this->data['importdataurl'] = $this->url->link('catalog/product/importproducts', 'token=' . $this->session->data['token'], 'SSL');
		
		
		$this->data['sampleexport'] = $this->url->link('catalog/product/productsampleexport', 'token=' . $this->session->data['token'], 'SSL');
		
		
  		$this->data['breadcrumbs'] = array();

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),  		
      		'separator' => false
   		);

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('catalog/product', 'token=' . $this->session->data['token'], 'SSL'),
      		'separator' => ' :: '
   		);
		
		
		if(isset($_POST['submit']))
		{		
				$insertonly=0;
				
				if(isset($_POST['insertonly']) && $_POST['insertonly']==1)
				$insertonly=1;
				
				
				if($this->validateImport())
				{  // import form validate start
				
				 if ((isset($this->request->files['file'])) && (is_uploaded_file($this->request->files['file']['tmp_name']))) 
				 { //file upload start
				 
							@set_time_limit(3600);
						if (substr(@ini_get("memory_limit"), 0, -1) < "512") {
									@ini_set("memory_limit", "512M");
								}
						ini_set("memory_limit", "512M");
						ini_set("max_execution_time", 180);
						ini_set('display_errors', 1);
						ini_set('log_errors', 1);
						error_reporting(E_ALL);
						//set_time_limit( 60 );
						
						$filename = $this->request->files['file']['tmp_name'];
						
						//chdir('../system/library/PHPExcel'); // change directory to PHPExcel library
						//require_once( 'Classes/PHPExcel.php' );
						//chdir('../../../admin');
						require_once('../system/library/PHPExcel/Classes/PHPExcel.php' );

						$inputFileType = PHPExcel_IOFactory::identify($filename);
						$objReader = PHPExcel_IOFactory::createReader($inputFileType);
						//$objReader->setReadDataOnly(true);
						$reader = $objReader->load($filename);
						$reader = &$reader;						
					//			$this->clearCache();
					
						$data = $reader->getSheet(0);
						
						$isFirstRow = TRUE;
						
						$i = 0;
						
						$k = $data->getHighestRow();
						
						$columns = PHPExcel_Cell::columnIndexFromString($data->getHighestColumn());
						
						$product_list_data = array();					

						if($columns == 34)
						{
						
						$customer_list_array=array();
						for ($i = 0; $i < $k; $i++) {  // Excel row loop start
							//Skip the header row
							if ($isFirstRow) {
								$isFirstRow = FALSE;
								continue;
							}			
							
							$product_categories=array();				
							
							// Collect Detail
							$productname = trim($this->getCell($data, $i, 1));
							$model = trim($this->getCell($data, $i, 2));
							$description = $this->getCell($data, $i, 3);
							
							//parent category
							$categorynames = $this->getCell($data, $i, 4);	
							$categorynamesloop = explode(',',$categorynames);
							foreach($categorynamesloop as $categoryname) {
							$product_categories[] = $this->model_catalog_category->getCategoryId(trim($categoryname));
							}
							
							$sku = $this->getCell($data, $i, 5);
							$upc = $this->getCell($data, $i, 6);
							$ean = $this->getCell($data, $i, 7);
							$jan = $this->getCell($data, $i, 8);
							$isbn = $this->getCell($data, $i, 9);
							$mpn = $this->getCell($data, $i, 10);
							
							$location = $this->getCell($data, $i, 11);
							$quantity = $this->getCell($data, $i, 12);
							$minimum = $this->getCell($data, $i, 13);
							$subtract = trim($this->getCell($data, $i, 14));
							$subtract = ($subtract == "Yes")?1:0;;
							
							//Stock Status
							$stock_status = trim($this->getCell($data, $i, 15));
							$stock_status_id = $this->model_localisation_stock_status->getStockStatusId($stock_status);
							
							$date_available = $this->getCell($data, $i, 16);
							
							//Maufacturer
							$manufacturer = trim($this->getCell($data, $i, 17));
							$manufacturer_id = $this->model_catalog_manufacturer->getManufacturerId($manufacturer);
							
							$shipping = $this->getCell($data, $i, 18);
							$shipping = ($shipping == "Yes")?1:0;;
							$price = $this->getCell($data, $i, 19);
							$weight = $this->getCell($data, $i, 20);							
							
							$weight_class = trim($this->getCell($data, $i, 21));
							$weight_class_id = $this->model_localisation_weight_class->getWeightClassId($weight_class);
							
							$length = $this->getCell($data, $i, 22);
							$width = $this->getCell($data, $i, 23);
							$height = $this->getCell($data, $i, 24);
							
							$length_class = trim($this->getCell($data, $i, 25));
							$length_class_id = $this->model_localisation_length_class->getLengthClassId($length_class);
							
							$tax_class = $this->getCell($data, $i, 26);
							$tax_class_id = $this->model_localisation_tax_class->getTaxClassId($tax_class);
							
							$sort_order = $this->getCell($data, $i, 27);
							$meta_keyword = $this->getCell($data, $i, 28);
							$meta_description = $this->getCell($data, $i, 29);
							
							$tag = $this->getCell($data, $i, 30);
							$keyword = $this->getCell($data, $i, 31);	
							
							//Images
							$product_images = array();
							$mainimage = $this->getCell($data, $i, 32);							
							$additionalimages = $this->getCell($data, $i, 33);
							
							
							if ($mainimage && file_exists(DIR_IMAGE . $mainimage)) {
								$thumbimage = $this->model_tool_image->resize($mainimage, 40, 40);
							} else {
								$thumbimage = $this->model_tool_image->resize('no_image.jpg', 40, 40);
							}
							
							
							if($additionalimages != '')
							{
							$sort_order_loop=1;							
							$additionalimagesloop = explode(',',$additionalimages);
							
							foreach($additionalimagesloop as $additionalimage) {
							$product_images[$sort_order_loop]['image'] = $additionalimage;
							$product_images[$sort_order_loop]['sort_order'] = 0;
							$sort_order_loop +=1;
							}
							}
							
							$status = trim($this->getCell($data, $i, 34));
							$status = ($status == "Enabled")?1:0;
							
							$product_array = array();
							
							$custom_language_id=is_numeric($this->config->get('config_language_id'))?$this->config->get('config_language_id'):1;
							
							//loop name and description by language
						    $product_description[$custom_language_id]['name'] = $productname;
						    $product_description[$custom_language_id]['description'] = $description;
							$product_description[$custom_language_id]['meta_keyword'] = $meta_keyword;
							$product_description[$custom_language_id]['meta_description'] = $meta_description;
							$product_description[$custom_language_id]['tag'] = $tag;
							
							$product_array['product_description'] = $product_description;
							
							// loop categories
							$product_array['product_category'] = $product_categories;
							
							$product_array['thumbimage'] = $thumbimage;
							$product_array['product_image'] = $product_images;
							$product_array['image'] = $mainimage;
							
							
							$product_array['categorynames'] = $categorynames;
							
							$product_array['product_store'] = array(0);
							
							$product_array['model'] = $model;
							$product_array['sku'] = $sku;
							$product_array['upc'] = $upc;
							$product_array['ean'] = $ean;
							$product_array['jan'] = $jan;
							$product_array['isbn'] = $isbn;
							$product_array['mpn'] = $mpn;
							
							$product_array['location'] = $location;
							$product_array['quantity'] = $quantity;
							$product_array['minimum'] = $minimum;
							$product_array['subtract'] = $subtract;
							$product_array['points'] = 0;
							
							$product_array['stock_status_id'] = $stock_status_id;
							
							$product_array['date_available'] = $date_available;
							$product_array['manufacturer_id'] = $manufacturer_id;
							
							$product_array['shipping'] = $shipping;
							$product_array['price'] = $price;
							
							$product_array['weight'] = $weight;
							$product_array['weight_class_id'] = $weight_class_id;
							$product_array['length'] = $length;
							$product_array['width'] = $width;
							$product_array['height'] = $height;							
							$product_array['length_class_id'] = $length_class_id;
							
							$product_array['tax_class_id'] = $tax_class_id;
							$product_array['sort_order'] = $sort_order;
							
							
							$product_array['keyword'] = $keyword;
														
							$product_array['status'] = $status;
							
							
							$product_list_data[]=$product_array;
						
						} // Excel row loop end
							
						}
						else
						{
							$excel_field_error = 1;
						}
								
						//chdir('../../..');	// change directory to site
						
						} //file upload end		
						
						if(!$excel_field_error)
						{
							$this->data['sampletabledata']=$product_list_data;
							
							$_SESSION['productlist'] = $product_list_data;
						}

				} // import form validate end		
		
		}
		
		if (isset($this->error['warning'])) {
			$this->data['error_warning'] = $this->error['warning'];
		} else {
			$this->data['error_warning'] = '';
		}
		
		if (isset($this->error['errorfile'])) {
			$this->data['error_file'] = $this->error['errorfile'];
		} else {
			$this->data['error_file'] = '';
		}
		
		if($excel_field_error)
			{
			$this->data['error_fields'] = 'Upload like our Sample Excel File';			
			}
		else
			{
			$this->data['error_fields'] = '';			
			}
		
		
		$this->template = 'catalog/product_import.tpl';
		
		$this->children = array(
			'common/header',
			'common/footer'
		);
		$this->response->setOutput($this->render());
		
	}
	
	public function importproducts()
	{
		$this->load->model('catalog/product');
		
	if(isset($_SESSION['productlist']) && is_array($_SESSION['productlist']))
	{
						foreach($_SESSION['productlist'] as $productdata)
						{
                            foreach($productdata['product_description'] as $langkey => $langval)
                            {
                                $productexist = $this->model_catalog_product->getProductId($langval['name'],$productdata['product_category']['0']);
                                if($productexist != 0)
                                {
                                $product_id = $productexist;
                                $this->model_catalog_product->editProduct($product_id,$productdata);
                                }
                                else
                                {
                                $this->model_catalog_product->addProduct($productdata);
                                }
                            } // foreach2
                        } // foreach1
					
			unset($_SESSION['productlist']);
			$url = '';			
								$this->redirect($this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL'));	
	
	}
	
	
	}
	
	
    function getCell(&$worksheet, $row, $col, $default_val = '') {
        $col -= 1; // we use 1-based, PHPExcel uses 0-based column index
        $row += 1; // we use 0-based, PHPExcel used 1-based row index
        return ($worksheet->cellExistsByColumnAndRow($col, $row)) ? $worksheet->getCellByColumnAndRow($col, $row)->getValue() : $default_val;
    }
	
	
	public function productsampleexport()
	{
		/* Include PHPExcel class */
		//chdir('../system/library/PHPExcel');
		//require_once( 'Classes/PHPExcel.php' );
		//chdir('../../../admin');
		require_once('../system/library/PHPExcel/Classes/PHPExcel.php' );
		
		// Instantiate a new PHPExcel object
		$objPHPExcel = new PHPExcel(); 
		// Set the active Excel worksheet to sheet 0
		$objPHPExcel->setActiveSheetIndex(0); 
		// Initialise the Excel row number
		$rowCount = 1; 
		
		/* Add Heading Row */ 
			$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, 'Product Name'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, 'Model'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, 'Product Description'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, 'Categories');   
			
			$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, 'SKU'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('F'.$rowCount, 'UPC'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('G'.$rowCount, 'EAN');      
			$objPHPExcel->getActiveSheet()->SetCellValue('H'.$rowCount, 'JAN'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('I'.$rowCount, 'ISBN'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('J'.$rowCount, 'MPN');   
			
			$objPHPExcel->getActiveSheet()->SetCellValue('K'.$rowCount, 'Location'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('L'.$rowCount, 'Quantity'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('M'.$rowCount, 'Minimum');   
			$objPHPExcel->getActiveSheet()->SetCellValue('N'.$rowCount, 'Subtract');      
			$objPHPExcel->getActiveSheet()->SetCellValue('O'.$rowCount, 'Stock Status'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('P'.$rowCount, 'Date Available'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, 'Manufacturer');  
			
			$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, 'Shipping'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('S'.$rowCount, 'Price'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('T'.$rowCount, 'Weight');      
			$objPHPExcel->getActiveSheet()->SetCellValue('U'.$rowCount, 'Weight Class'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('V'.$rowCount, 'Length');       
			$objPHPExcel->getActiveSheet()->SetCellValue('W'.$rowCount, 'Width');       
			$objPHPExcel->getActiveSheet()->SetCellValue('X'.$rowCount, 'Height');      
			$objPHPExcel->getActiveSheet()->SetCellValue('Y'.$rowCount, 'Length Class'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('Z'.$rowCount, 'Tax Class'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('AA'.$rowCount, 'Sort Order'); 

			$objPHPExcel->getActiveSheet()->SetCellValue('AB'.$rowCount, 'Meta Key'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('AC'.$rowCount, 'Meta Description'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('AD'.$rowCount, 'Tag'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('AE'.$rowCount, 'Keyword'); 
			//Images
			$objPHPExcel->getActiveSheet()->SetCellValue('AF'.$rowCount, 'Image'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('AG'.$rowCount, 'Additional Images'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('AH'.$rowCount, 'Status');
			
		/* Add data Rows */		
/*        $rowCount = 2;
		
			$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, 'Sample '); 
			$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, 'Model1'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, 'Sample Product by IRS');  
			$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, 'Category names');   		
			$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, 'Enabled'); 
	*/		
		// Redirect output to a client’s web browser (Excel5) 
		//header('Content-Type: application/vnd.ms-excel'); 
header("Content-Type: text/csv; charset=utf-8");
		header('Content-Disposition: attachment;filename="product_list_'.date("Y m d G i s").'.csv"'); 
		//header('Content-Disposition: attachment;filename="category_list_'.date("Y m d G i s").'.xlsx"'); 
		header('Cache-Control: max-age=0'); 
			
		// Instantiate a Writer to create an OfficeOpenXML Excel .xlsx file
		//$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel); 

$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel,'CSV');

		// Write the Excel file to filename some_excel_file.xlsx in the current directory
		//$objWriter->save('some_excel_file.xlsx'); 
		
		/* Download CsV file in downloads */
		$objWriter->save('php://output'); 
					
        //chdir('../../..');
	}
	protected function validateImport() {
		if (!$this->user->hasPermission('modify', 'sale/customer')) {
				$this->error['warning'] = $this->language->get('error_permission');
		}
		
		if (!$this->request->files['file']['tmp_name']) {
				$this->error['errorfile'] = $this->language->get('Please Upload a Excel/CSV file');
		}
		elseif($_FILES["file"]["name"])
		{
			$allowedExts = array("csv", "xlsx", "xls");
			$temp = explode(".", $_FILES["file"]["name"]);
			$extension = end($temp);
			
			if(!in_array($extension, $allowedExts))
				$this->error['errorfile'] = $this->language->get('Please Upload a Excel/CSV file');	
		}
		
		if (!$this->error) {
			return true;
		} else {
			return false;
		}
	}
	]]></add>
		</operation>  
        
	</file>
	
	
	
	
	
   
<!-- Product Model -->

	<file name="admin/model/catalog/product.php">
		<operation>
			<search position="before"><![CDATA[public function getProduct($product_id) {]]></search>
			<add><![CDATA[//public function getProductId($product) {
public function getProductId($product,$categoryid) {
			
		//$query = $this->db->query("SELECT product_id FROM " . DB_PREFIX . "product_description WHERE name LIKE '".$product."'");

$query = $this->db->query("SELECT pd.product_id,pc.category_id FROM " . DB_PREFIX . "product_description AS pd 
LEFT JOIN " . DB_PREFIX . "product_to_category AS pc ON pd.product_id = pc.product_id WHERE pd.name LIKE '".$product."' AND  pc.category_id='".$categoryid."'");
		

if($query->row)
		{
			return $query->row['product_id'];
		}
		else
		{
			return 0;		
		}	
	} 
	]]></add>
		</operation>
	</file>
	
<!-- Product View -->

	<file name="admin/view/template/catalog/product_list.tpl">
		<operation>
			<search position="replace"><![CDATA[<div class="buttons"><a onclick="location = '<?php echo $insert; ?>'" class="button"><?php echo $button_insert; ?></a><a onclick="$('#form').attr('action', '<?php echo $copy; ?>'); $('#form').submit();" class="button"><?php echo $button_copy; ?></a><a onclick="$('form').submit();" class="button"><?php echo $button_delete; ?></a></div>]]></search>
			<add><![CDATA[<div class="buttons"><a href="<?php echo $import; ?>" class="button"><?php echo $button_import; ?></a><a onclick="location = '<?php echo $insert; ?>'" class="button"><?php echo $button_insert; ?></a><a onclick="$('#form').attr('action', '<?php echo $copy; ?>'); $('#form').submit();" class="button"><?php echo $button_copy; ?></a><a onclick="$('form').submit();" class="button"><?php echo $button_delete; ?></a></div>]]></add>
		</operation>
	</file>
<!-- Stock Status Model -->

	<file name="admin/model/localisation/stock_status.php">
		<operation>
			<search position="before"><![CDATA[public function getStockStatus($stock_status_id) {]]></search>
			<add><![CDATA[public function getStockStatusId($stock_status) {
		$query = $this->db->query("SELECT stock_status_id FROM " . DB_PREFIX . "stock_status WHERE name LIKE '" . $stock_status . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");
		if($query->row)
		return $query->row['stock_status_id'];
		else
		return 0;
	}]]></add>
		</operation>
	</file>
	
<!-- Manufacturer Model -->

	<file name="admin/model/catalog/manufacturer.php">
		<operation>
			<search position="before"><![CDATA[public function getManufacturer($manufacturer_id) {]]></search>
			<add><![CDATA[public function getManufacturerId($manufacturer) {
		$query = $this->db->query("SELECT manufacturer_id FROM " . DB_PREFIX . "manufacturer WHERE name LIKE '" . $manufacturer . "'");
		if($query->row)
		return $query->row['manufacturer_id'];
		else
		return 0;
	}]]></add>
		</operation>
	</file>
	
		
<!-- Weight Class Model -->

	<file name="admin/model/localisation/weight_class.php">
		<operation>
			<search position="before"><![CDATA[public function getWeightClass($weight_class_id) {]]></search>
			<add><![CDATA[public function getWeightClassId($weight_class) {
		$query = $this->db->query("SELECT weight_class_id FROM " . DB_PREFIX . "weight_class_description wcd WHERE wcd.title LIKE '" . $weight_class . "' AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
		if($query->row)
		return $query->row['weight_class_id'];
		else
		return 0;
	}]]></add>
		</operation>
	</file>
	
		
<!-- Length Class Model -->

	<file name="admin/model/localisation/length_class.php">
		<operation>
			<search position="before"><![CDATA[public function getLengthClass($length_class_id) {]]></search>
			<add><![CDATA[public function getLengthClassId($length_class) {
		$query = $this->db->query("SELECT length_class_id FROM " . DB_PREFIX . "length_class_description lcd WHERE lcd.title  LIKE '" . $length_class . "' AND lcd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
		if($query->row)
		return $query->row['length_class_id'];
		else
		return 0;
	}]]></add>
		</operation>
	</file>
		
<!-- TAX Class Model -->

	<file name="admin/model/localisation/tax_class.php">
		<operation>
			<search position="before"><![CDATA[public function getTaxClass($tax_class_id) {]]></search>
			<add><![CDATA[public function getTaxClassId($tax_class) {
		$query = $this->db->query("SELECT tax_class_id FROM " . DB_PREFIX . "tax_class WHERE title LIKE '" . $tax_class . "'");
		if($query->row)
		return $query->row['tax_class_id'];
		else
		return 0;
	}]]></add>
		</operation>
	</file>
	
</modification>
