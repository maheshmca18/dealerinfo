<modification>

	<id>Import Customer data</id>
	<version>1.0</version>
	<vqmver>2.3.2 +</vqmver>
	<author>IRS</author>
	 
<!-- Language -->

	<file name="admin/language/english/english.php">
		<operation>
			<search position="after" offset="0"><![CDATA[$_['button_approve']                = 'Approve';]]></search>
			<add><![CDATA[$_['button_import']                = 'Import';]]></add>
		</operation>
	</file>
	
	
<!-- Customer -->    
<!-- Controller --> 
  
    <file name="admin/controller/sale/customer.php">
	<operation>
			<search position="before" offset="0"><![CDATA[$this->data['button_insert'] = $this->language->get('button_insert');]]></search>
            <add><![CDATA[$this->data['button_import'] = $this->language->get('button_import');
			$this->data['import'] = $this->url->link('sale/customer/import', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></add>
		</operation>  
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function insert() {]]></search>
			<add><![CDATA[
	public function import() {
		
		$excel_field_error = 0;
		$_SESSION['customerslist']=array();
	
		$this->language->load('sale/customer');
		
		$this->load->model('sale/customer');
		$this->load->model('sale/customer_group');
		$this->load->model('localisation/country');
		$this->load->model('localisation/zone');
		
		$this->data['heading_title'] = "Import Customer Data";

		$this->data['entry_import'] = $this->language->get('Upload Excel File');
		
		$this->data['entry_insertonly'] = $this->language->get('Insert Only');	
				
		$this->data['action'] = $this->url->link('sale/customer/import', 'token=' . $this->session->data['token'], 'SSL');
		
		$this->data['importdataurl'] = $this->url->link('sale/customer/importcustomers', 'token=' . $this->session->data['token'], 'SSL');
		
		
		$this->data['sampleexport'] = $this->url->link('sale/customer/customersampleexport', 'token=' . $this->session->data['token'], 'SSL');
		
		
  		$this->data['breadcrumbs'] = array();

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),  		
      		'separator' => false
   		);

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('sale/customer', 'token=' . $this->session->data['token'], 'SSL'),
      		'separator' => ' :: '
   		);
		
		if(isset($_POST['submit']))
		{		
				$insertonly=0;
				
				if(isset($_POST['insertonly']) && $_POST['insertonly']==1)
				$insertonly=1;
				
				
				if($this->validateImport())
				{  // import form validate start
				
				 if ((isset($this->request->files['file'])) && (is_uploaded_file($this->request->files['file']['tmp_name']))) 
				 { //file upload start
				 
							@set_time_limit(3600);
						if (substr(@ini_get("memory_limit"), 0, -1) < "512") {
									@ini_set("memory_limit", "512M");
								}
						ini_set("memory_limit", "512M");
						ini_set("max_execution_time", 180);
						ini_set('display_errors', 1);
						ini_set('log_errors', 1);
						error_reporting(E_ALL);
						//set_time_limit( 60 );
						
						$filename = $this->request->files['file']['tmp_name'];
						
						//chdir('../system/library/PHPExcel'); // change directory to PHPExcel library
						//require_once( 'Classes/PHPExcel.php' );
						//chdir('../../../admin');
						require_once('../system/library/PHPExcel/Classes/PHPExcel.php' );

						$inputFileType = PHPExcel_IOFactory::identify($filename);
						$objReader = PHPExcel_IOFactory::createReader($inputFileType);
						//$objReader->setReadDataOnly(true);
						$reader = $objReader->load($filename);
						$reader = &$reader;						
					//			$this->clearCache();
					
						$data = $reader->getSheet(0);
						
						$isFirstRow = TRUE;
						
						$i = 0;
						
						$k = $data->getHighestRow();						
						
						$columns = PHPExcel_Cell::columnIndexFromString($data->getHighestColumn());
				
						$customer_list_data = array();
					
						if($columns == 18)
						{
						
						$customer_list_array=array();
						for ($i = 0; $i < $k; $i++) {  // Excel row loop start
							//Skip the header row
							if ($isFirstRow) {
								$isFirstRow = FALSE;
								continue;
							}			

							
							// Collect Detail
							$firstname = $this->getCell($data, $i, 1);
							$lastname = $this->getCell($data, $i, 2);		   
							$email = $this->getCell($data, $i, 3);
							$password = $this->getCell($data, $i, 4);
							$telephone = $this->getCell($data, $i, 5);
							$fax = $this->getCell($data, $i, 6);
							$newsletter = $this->getCell($data, $i, 7);
							$newsletter=($newsletter=="Enabled")?1:0;
							
							//get customer group id by customer group name
							$customer_group = $this->getCell($data, $i, 8);								
							$customer_group_id =$this->model_sale_customer_group->getCustomerGroupIdByName($customer_group);
																				
							$status = $this->getCell($data, $i, 9);
							$status=($status=="Enabled")?1:0;
							$company = $this->getCell($data, $i, 10);
							$company_id = $this->getCell($data, $i, 11);
							$tax_id = $this->getCell($data, $i, 12);
							$address1 = $this->getCell($data, $i, 13);
							$address2 = $this->getCell($data, $i, 14);	   
							$city = $this->getCell($data, $i, 15);
							$postcode = $this->getCell($data, $i, 16);
							
							
							//get country id by country name
							$country = $this->getCell($data, $i, 17);								
							$country_id = $this->model_localisation_country->getCountryIdByName($country);
							
							//get zone id by zone/state name
							$zone = $this->getCell($data, $i, 18);
							$zone_id = $this->model_localisation_zone->getZoneIdByName($zone);
							
							$customer_array = array();
							//Customer Info
						    $customer_array['firstname'] = $firstname;
							$customer_array['lastname'] = $lastname;
							$customer_array['email'] = $email;
							$customer_array['telephone'] = $telephone;		
							$customer_array['fax'] = $fax;
							$customer_array['newsletter'] = $newsletter;
							$customer_array['customer_group_id'] = $customer_group_id;	
							$customer_array['customer_group'] = $customer_group;			
							$customer_array['password'] = $password;			
							$customer_array['status'] = $status;
							
							//Address
						    $customer_address['firstname'] = $firstname;
							$customer_address['lastname'] = $lastname;
							$customer_address['company'] = $company;			
							$customer_address['company_id'] = $company_id;	
							$customer_address['tax_id'] = $tax_id;
							$customer_address['address_1'] = $address1;
							$customer_address['address_2'] = $address2;	
							$customer_address['city'] = $city;
							$customer_address['postcode'] = $postcode;
							$customer_address['country_id'] = $country_id;			
							$customer_address['zone_id'] = $zone_id;
							
							//Address Default
							$customer_address['default'] = 1;	
							
							$customer_array['address'][0] = $customer_address;
							
							$customer_list_data[]=$customer_array;
						
						} // Excel row loop end
						}
						else
						{
							$excel_field_error = 1;
						}
								
						//chdir('../../..');	// change directory to site
						
						} //file upload end		
						
						if(!$excel_field_error)
						{
							$this->data['sampletabledata']=$customer_list_data;
							
							$_SESSION['customerslist'] = $customer_list_data;
						}
						

				} // import form validate end		
		
		}
		
		if (isset($this->error['warning'])) {
			$this->data['error_warning'] = $this->error['warning'];
		} else {
			$this->data['error_warning'] = '';
		}
		
		if (isset($this->error['errorfile'])) {
			$this->data['error_file'] = $this->error['errorfile'];
		} else {
			$this->data['error_file'] = '';
		}
		
		if($excel_field_error)
			{
			$this->data['error_fields'] = 'Upload like our Sample Excel File';			
			}
		else
			{
			$this->data['error_fields'] = '';			
			}
		
		
		$this->template = 'sale/customer_import.tpl';
		
		$this->children = array(
			'common/header',
			'common/footer'
		);
		$this->response->setOutput($this->render());
		
	}
	
	public function importcustomers()
	{
	
		$this->load->model('sale/customer');
		
	if(isset($_SESSION['customerslist']) && is_array($_SESSION['customerslist']))
	{
	
						foreach($_SESSION['customerslist'] as $customerdata)
						{
						
							$customerexist = $this->model_sale_customer->getCustomerIdByEmail($customerdata['email']);
							
							if($customerexist != 0)
							{	
							
							$customer_id = $customerexist['customer_id'];	
							
							$customerdata['address'][0]['address_id'] = $customerexist['address_id'];
									
							$this->model_sale_customer->editCustomer($customer_id,$customerdata);
							
							}
							else
							{
							
							$this->model_sale_customer->addCustomer($customerdata);
						
							}
													
						
						}
					
			unset($_SESSION['customerslist']);
			$url = '';			
								$this->redirect($this->url->link('sale/customer', 'token=' . $this->session->data['token'] . $url, 'SSL'));	
	
	}
	
	}
	
	
    function getCell(&$worksheet, $row, $col, $default_val = '') {
        $col -= 1; // we use 1-based, PHPExcel uses 0-based column index
        $row += 1; // we use 0-based, PHPExcel used 1-based row index
        return ($worksheet->cellExistsByColumnAndRow($col, $row)) ? $worksheet->getCellByColumnAndRow($col, $row)->getValue() : $default_val;
    }
	
	
	public function customersampleexport()
	{
		/* Include PHPExcel class */
		//chdir('../system/library/PHPExcel');
		//require_once( 'Classes/PHPExcel.php' );
		//chdir('../../../admin');
		require_once('../system/library/PHPExcel/Classes/PHPExcel.php' );
		
		// Instantiate a new PHPExcel object
		$objPHPExcel = new PHPExcel(); 
		// Set the active Excel worksheet to sheet 0
		$objPHPExcel->setActiveSheetIndex(0); 
		// Initialise the Excel row number
		$rowCount = 1; 
		
		/* Add Heading Row */ 
			$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, 'First Name'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, 'Last Name');  
			$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, 'Email');   		
			$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, 'Password'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, 'Telephone');  
			$objPHPExcel->getActiveSheet()->SetCellValue('F'.$rowCount, 'FAX'); 	
			$objPHPExcel->getActiveSheet()->SetCellValue('G'.$rowCount, 'Newsletter');
			
			//Customer Group
			$objPHPExcel->getActiveSheet()->SetCellValue('H'.$rowCount, 'Customer Group'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('I'.$rowCount, 'Status'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('J'.$rowCount, 'Company'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('K'.$rowCount, 'Company ID'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('L'.$rowCount, 'TAX ID'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('M'.$rowCount, 'Address 1'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('N'.$rowCount, 'Address 2'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('O'.$rowCount, 'City'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('P'.$rowCount, 'Postcode'); 
			
			//$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, 'Country ID');
			$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, 'Country');  
			
			//$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, 'Zone ID');
			$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, 'Zone');
			
			
			
		/* Add data Rows */		
        $rowCount = 2;
		
			$objPHPExcel->getActiveSheet()->SetCellValue('A'.$rowCount, 'customername1'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('B'.$rowCount, 'irs');  
			$objPHPExcel->getActiveSheet()->SetCellValue('C'.$rowCount, 'irs@gmail.com');   		
			$objPHPExcel->getActiveSheet()->SetCellValue('D'.$rowCount, 'xxx'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('E'.$rowCount, '0987654321');  
			$objPHPExcel->getActiveSheet()->SetCellValue('F'.$rowCount, '0987654321'); 	
			$objPHPExcel->getActiveSheet()->SetCellValue('G'.$rowCount, 'Enabled');
			
			//Customer Group
			$objPHPExcel->getActiveSheet()->SetCellValue('H'.$rowCount, 'Default'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('I'.$rowCount, 'Enabled'); 
			
			$objPHPExcel->getActiveSheet()->SetCellValue('J'.$rowCount, 'IRS Soft'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('K'.$rowCount, '111'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('L'.$rowCount, '123456'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('M'.$rowCount, 'address 1'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('N'.$rowCount, 'address 2'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('O'.$rowCount, 'Chennai'); 
			$objPHPExcel->getActiveSheet()->SetCellValue('P'.$rowCount, '600001'); 
			
			//$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, 'Country ID');
			$objPHPExcel->getActiveSheet()->SetCellValue('Q'.$rowCount, 'India');  
			
			//$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, 'Zone ID');
			$objPHPExcel->getActiveSheet()->SetCellValue('R'.$rowCount, 'Tamil Nadu');
			
			
			
		// Redirect output to a client’s web browser (Excel5) 
		header('Content-Type: application/vnd.ms-excel'); 
		header('Content-Disposition: attachment;filename="customer_list_'.date("Y m d G i s").'.csv"'); 
		//header('Content-Disposition: attachment;filename="customer_list_'.date("Y m d G i s").'.xlsx"'); 
		header('Cache-Control: max-age=0'); 
			
		// Instantiate a Writer to create an OfficeOpenXML Excel .xlsx file
		$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel); 
		// Write the Excel file to filename some_excel_file.xlsx in the current directory
		//$objWriter->save('some_excel_file.xlsx'); 
		
		/* Download CsV file in downloads */
		$objWriter->save('php://output'); 
					
        //chdir('../../..');
	}
	protected function validateImport() {
		if (!$this->user->hasPermission('modify', 'sale/customer')) {
				$this->error['warning'] = $this->language->get('error_permission');
		}
		
		if (!$this->request->files['file']['tmp_name']) {
				$this->error['errorfile'] = $this->language->get('Please Upload a Excel/CSV file');
		}
		elseif($_FILES["file"]["name"])
		{
			$allowedExts = array("csv", "xlsx", "xls");
			$temp = explode(".", $_FILES["file"]["name"]);
			$extension = end($temp);
			
			if(!in_array($extension, $allowedExts))
				$this->error['errorfile'] = $this->language->get('Please Upload a Excel/CSV file');	
				
				
			
		}
		
		if (!$this->error) {
			return true;
		} else {
			return false;
		}
	}
	]]></add>
		</operation>  
        
	</file>
   
<!-- Model -->

	<file name="admin/model/sale/customer.php">
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function getCustomers($data = array()) {]]></search>
			<add><![CDATA[public function getCustomerIdByEmail($email)
						{
						$query = $this->db->query("SELECT customer_id,address_id FROM " . DB_PREFIX . "customer WHERE LCASE(email) LIKE '".$this->db->escape(utf8_strtolower($email))."'");
									if($query->row)
									return $query->row;
									else
									return 0;
						}
						
						public function getDefaultAddress($customer_id) {
							$address_data = array();

							$query = $this->db->query("SELECT address_id FROM " . DB_PREFIX . "address WHERE customer_id = '" . (int)$customer_id . "'");

							foreach ($query->rows as $result) {
								$address_info = $this->getAddress($result['address_id']);

								if ($address_info) {
									$address_data[$result['address_id']] = $address_info;
								}
							}		

							return $address_data;
						}
	
	]]></add>
		</operation>	
		
	</file>  
	
	
<!-- Customer View -->

	<file name="admin/view/template/sale/customer_list.tpl">
		<operation>
			<search position="replace"><![CDATA[<a href="<?php echo $insert; ?>" class="button"><?php echo $button_insert; ?></a>]]></search>
			<add><![CDATA[<a href="<?php echo $import; ?>" class="button"><?php echo $button_import; ?></a><a href="<?php echo $insert; ?>" class="button"><?php echo $button_insert; ?></a>]]></add>
		</operation>
	</file>
		
		
		<!-- Country Model -->
	<file name="admin/model/localisation/country.php">
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function getCountry($country_id) {]]></search>
			<add><![CDATA[public function getCountryIdByName($country) {				
				$query = $this->db->query("SELECT country_id FROM " . DB_PREFIX . "country WHERE name LIKE '".$country."'");
				if($query->row)
				return $query->row['country_id'];
				else
				return 0;
			}]]></add>
		</operation>	
		
	</file>   
		
		
		<!-- Zone Model -->
	<file name="admin/model/localisation/zone.php">
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function getZone($zone_id) {]]></search>
			<add><![CDATA[public function getZoneIdByName($zone) {	
			
				$query = $this->db->query("SELECT zone_id FROM " . DB_PREFIX . "zone WHERE name LIKE '".$zone."'");
				if($query->row)
				return $query->row['zone_id'];
				else
				return 0;
			}]]></add>
		</operation>	
		
	</file>   
		
		
		<!-- Customer Group Model -->
	<file name="admin/model/sale/customer_group.php">
	
		<operation>
			<search position="before" offset="0"><![CDATA[public function getCustomerGroup($customer_group_id) {]]></search>
			<add><![CDATA[public function getCustomerGroupIdByName($customer_group) {
		$query = $this->db->query("SELECT customer_group_id FROM " . DB_PREFIX . "customer_group_description WHERE name  like '" . $customer_group . "'");
		
		if($query->row)
		return $query->row['customer_group_id'];
		else
		return 0;
	}
	]]></add>
		</operation>	
		
	</file>   
		 
</modification>
