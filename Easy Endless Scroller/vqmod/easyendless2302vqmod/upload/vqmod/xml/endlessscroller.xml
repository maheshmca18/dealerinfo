<modification>
    <id>Endless Scroller</id>
    <version>2.0</version>
    <vqmver>2.4.1</vqmver>
    <author>IRS SOFT</author>

<file path="catalog/view/theme/*/template/common/header.tpl">
    
    <operation>
            <search position="before" ><![CDATA[<link href="catalog/view/javascript/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen" />]]></search>
            <add><![CDATA[<script src="catalog/view/javascript/irsendless/jquery.lazyload.js" type="text/javascript"></script>]]></add>
        </operation>
 </file>
<file path="catalog/controller/product/" name="category.php,search.php">
    
 	<operation>
            <search position="after" ><![CDATA[$results = $this->model_catalog_product->getProducts($filter_data);]]></search>
            <add><![CDATA[$data['endlesstotal'] = count($results); //echo $ajaxdatatotalresult;
$data['endlesspagination'] = sprintf($this->language->get('text_pagination'),  1, $data['endlesstotal'], $product_total, ceil($product_total / $limit));
$data['product_total']=$product_total;
$data['limit']=$limit; 
$data['endless_status']=$this->config->get('endless_status');	
]]></add>
        </operation>
 </file>  
<file path="catalog/controller/product/category.php">
<operation>
             <search position="before" ><![CDATA[public function index() {]]></search>
            <add><![CDATA[public function scrollerAjax(){
		$this->load->language('product/category');
		$this->load->model('catalog/category');
		$this->load->model('catalog/product');
		$this->load->model('tool/image');
		$data="";
		if (isset($this->request->get['filter'])) {
			$filter = $this->request->get['filter'];
		} else {
			$filter = '';
		}
		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'p.sort_order';
		}
		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}
		if (isset($this->request->get['page'])) {
			$page = (int)$this->request->get['page'];
		} else {
			$page = 1;
		}
		if (isset($this->request->get['limit'])) {
			$limit = (int)$this->request->get['limit'];
		} else {
			$limit = (int)$this->config->get('config_product_limit');
		}
		$data['endless_status']=$this->config->get('endless_status');
	if (isset($this->request->get['viewproduct'])) {
			$data['viewproduct'] = $this->request->get['viewproduct'];
		} else {
			$data['viewproduct'] = "product-layout product-list col-xs-12";
		}
		if (isset($this->request->get['start'])) {
			$start = (int)$this->request->get['start'];
		} else {
			$start = 0;
		}
		if (isset($this->request->get['path'])) {
			$path = '';

			$parts = explode('_', (string)$this->request->get['path']);

			$category_id = (int)array_pop($parts);
		} else {
			$category_id = 0;
		}

		$category_info = $this->model_catalog_category->getCategory($category_id);
		if ($category_info) {
			$url = '';

			if (isset($this->request->get['filter'])) {
				$url .= '&filter=' . $this->request->get['filter'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			$data['text_tax'] = $this->language->get('text_tax');

			$data['button_cart'] = $this->language->get('button_cart');
			$data['button_wishlist'] = $this->language->get('button_wishlist');
			$data['button_compare'] = $this->language->get('button_compare');

			$data['cit_status'] = $this->config->get('cit_status');
			
			$data['products'] = array();

			$filter_data = array(
				'filter_category_id' => $category_id,
				'filter_filter'      => $filter,
				'sort'               => $sort,
				'order'              => $order,
				'start'              => $start,
				'limit'              => $limit
			);
		$product_total = $this->model_catalog_product->getTotalProducts($filter_data);
			$results = $this->model_catalog_product->getProducts($filter_data);
$ajaxdatatotalresult = count($results); //echo $ajaxdatatotalresult;
$settotalproduct=$ajaxdatatotalresult + $start;
$endlesspagination = sprintf($this->language->get('text_pagination'),  1, $settotalproduct, $product_total, ceil($product_total / $limit));
		if($results){
			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
				}

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					//'image_alt'   => isset($result['alt_text']) ? $result['alt_text'] : '',
					//'image_title' => isset($result['title_text']) ? $result['title_text'] : '',
					'name'        => $result['name'],
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'minimum'     => (isset($result['minimum']) && $result['minimum'] > 0) ? $result['minimum'] : 1,
					'rating'      => $result['rating'],
					'href'        => $this->url->link('product/product', 'path=' . $this->request->get['path'] . '&product_id=' . $result['product_id'] . $url)
				);
			}
		} else {   $data=""; }


}	
		$response="";
		if (isset($data['products'])) {
			$template = 'product/category_endless';
			$response = array("success" => 1,"totalajaxresult" => $endlesspagination ,"endlesstest" => $ajaxdatatotalresult, "data" => $this->load->view($template, $data));
		} else {
		$response = array("error" => 1);
			}

			$this->response->addHeader('Content-Type: application/json');
			$this->response->setOutput(json_encode($response));
		} ]]></add>
        </operation>
    </file>  
<file path="catalog/controller/product/search.php">
    
 	<operation>
            <search position="before" ><![CDATA[public function index() {]]></search>
            <add><![CDATA[public function scrollerAjax() {
		$this->load->language('product/search');
		$this->load->model('catalog/category');
		$this->load->model('catalog/product');
		$this->load->model('tool/image');
		if (isset($this->request->get['search'])) {
			$search = $this->request->get['search'];
		} else {
			$search = '';
		}
	$data['endless_status']=$this->config->get('endless_status');
		if (isset($this->request->get['tag'])) {
			$tag = $this->request->get['tag'];
		} elseif (isset($this->request->get['search'])) {
			$tag = $this->request->get['search'];
		} else {
			$tag = '';
		}

		if (isset($this->request->get['description'])) {
			$description = $this->request->get['description'];
		} else {
			$description = '';
		}

		if (isset($this->request->get['category_id'])) {
			$category_id = $this->request->get['category_id'];
		} else {
			$category_id = 0;
		}

		if (isset($this->request->get['sub_category'])) {
			$sub_category = $this->request->get['sub_category'];
		} else {
			$sub_category = '';
		}

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'p.sort_order';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		if (isset($this->request->get['limit'])) {
			$limit = $this->request->get['limit'];
		} else {
			$limit = $this->config->get('config_product_limit');
		}

		if (isset($this->request->get['search'])) {
			$this->document->setTitle($this->language->get('heading_title') .  ' - ' . $this->request->get['search']);
		} elseif (isset($this->request->get['tag'])) {
			$this->document->setTitle($this->language->get('heading_title') .  ' - ' . $this->language->get('heading_tag') . $this->request->get['tag']);
		} else {
			$this->document->setTitle($this->language->get('heading_title'));
		}
if (isset($this->request->get['viewproduct'])) {
			$data['viewproduct'] = $this->request->get['viewproduct'];
		} else {
			$data['viewproduct'] = "product-layout product-list col-xs-12";
		}

		$data['breadcrumbs'] = array();

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('text_home'),
			'href' => $this->url->link('common/home')
		);

		$url = '';

		if (isset($this->request->get['search'])) {
			$url .= '&search=' . urlencode(html_entity_decode($this->request->get['search'], ENT_QUOTES, 'UTF-8'));
		}

		if (isset($this->request->get['tag'])) {
			$url .= '&tag=' . urlencode(html_entity_decode($this->request->get['tag'], ENT_QUOTES, 'UTF-8'));
		}

		if (isset($this->request->get['description'])) {
			$url .= '&description=' . $this->request->get['description'];
		}

		if (isset($this->request->get['category_id'])) {
			$url .= '&category_id=' . $this->request->get['category_id'];
		}

		if (isset($this->request->get['sub_category'])) {
			$url .= '&sub_category=' . $this->request->get['sub_category'];
		}

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		if (isset($this->request->get['limit'])) {
			$url .= '&limit=' . $this->request->get['limit'];
		}

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('heading_title'),
			'href' => $this->url->link('product/search', $url)
		);

		if (isset($this->request->get['search'])) {
			$data['heading_title'] = $this->language->get('heading_title') .  ' - ' . $this->request->get['search'];
		} else {
			$data['heading_title'] = $this->language->get('heading_title');
		}

if (isset($this->request->get['start'])) {
			$start = (int)$this->request->get['start'];
		} else {
			$start = 0;
		}

		$data['text_empty'] = $this->language->get('text_empty');
		$data['text_search'] = $this->language->get('text_search');
		$data['text_keyword'] = $this->language->get('text_keyword');
		$data['text_category'] = $this->language->get('text_category');
		$data['text_sub_category'] = $this->language->get('text_sub_category');
		$data['text_quantity'] = $this->language->get('text_quantity');
		$data['text_manufacturer'] = $this->language->get('text_manufacturer');
		$data['text_model'] = $this->language->get('text_model');
		$data['text_price'] = $this->language->get('text_price');
		$data['text_tax'] = $this->language->get('text_tax');
		$data['text_points'] = $this->language->get('text_points');
		$data['text_compare'] = sprintf($this->language->get('text_compare'), (isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0));
		$data['text_sort'] = $this->language->get('text_sort');
		$data['text_limit'] = $this->language->get('text_limit');
		$data['entry_search'] = $this->language->get('entry_search');
		$data['entry_description'] = $this->language->get('entry_description');
		$data['button_search'] = $this->language->get('button_search');
		$data['button_cart'] = $this->language->get('button_cart');
		$data['button_wishlist'] = $this->language->get('button_wishlist');
		$data['button_compare'] = $this->language->get('button_compare');
		$data['button_list'] = $this->language->get('button_list');
		$data['button_grid'] = $this->language->get('button_grid');

		$data['compare'] = $this->url->link('product/compare');
		$this->load->model('catalog/category');

		// 3 Level Category Search
		$data['categories'] = array();
		$categories_1 = $this->model_catalog_category->getCategories(0);

		foreach ($categories_1 as $category_1) {
			$level_2_data = array();
			$categories_2 = $this->model_catalog_category->getCategories($category_1['category_id']);
			foreach ($categories_2 as $category_2) {
				$level_3_data = array();
				$categories_3 = $this->model_catalog_category->getCategories($category_2['category_id']);
				foreach ($categories_3 as $category_3) {
					$level_3_data[] = array(
						'category_id' => $category_3['category_id'],
						'name'        => $category_3['name'],
					);
				}

				$level_2_data[] = array(
					'category_id' => $category_2['category_id'],
					'name'        => $category_2['name'],
					'children'    => $level_3_data
				);
			}

			$data['categories'][] = array(
				'category_id' => $category_1['category_id'],
				'name'        => $category_1['name'],
				'children'    => $level_2_data
			);
		}

		$data['products'] = array();

		if (isset($this->request->get['search']) || isset($this->request->get['tag'])) {
			$filter_data = array(
				'filter_name'         => $search,
				'filter_tag'          => $tag,
				'filter_description'  => $description,
				'filter_category_id'  => $category_id,
				'filter_sub_category' => $sub_category,
				'sort'                => $sort,
				'order'               => $order,
				'start'               => $start,
				'limit'               => $limit
			);

			$product_total = $this->model_catalog_product->getTotalProducts($filter_data);

			$results = $this->model_catalog_product->getProducts($filter_data);

$ajaxdatatotalresult = count($results); //echo $ajaxdatatotalresult;
$settotalproduct=$ajaxdatatotalresult + $start;
$endlesspagination = sprintf($this->language->get('text_pagination'),  1, $settotalproduct, $product_total, ceil($product_total / $limit));

if($results){
			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
				}

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
					'rating'      => $result['rating'],
					'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'] . $url)
				);
			}
} else {   $data=""; }

}			$response="";
		if (isset($data['products'])) {
			$template = 'product/search_endless';
			$response = array("success" => 1,"totalajaxresult" => $endlesspagination ,"endlesstest" => $ajaxdatatotalresult, "data" => $this->load->view($template, $data));
		} else {
		$response = array("error" => 1);
			}

			$this->response->addHeader('Content-Type: application/json');
			$this->response->setOutput(json_encode($response));		
	}]]></add>
        </operation>
  </file>  
 
<file path="catalog/controller/product/special.php">
    <operation>
            <search position="after" ><![CDATA[$results = $this->model_catalog_product->getProductSpecials($filter_data);]]></search>
            <add><![CDATA[$data['endlesstotal'] = count($results); //echo $ajaxdatatotalresult;
$data['endlesspagination'] = sprintf($this->language->get('text_pagination'),  1, $data['endlesstotal'], $product_total, ceil($product_total / $limit));
$data['product_total']=$product_total;
$data['limit']=$limit; 
$data['endless_status']=$this->config->get('endless_status');	
]]></add>
        </operation>
 	<operation>
            <search position="before" ><![CDATA[public function index() {]]></search>
            <add><![CDATA[public function scrollerAjax() {
		$this->load->language('product/special');

		$this->load->model('catalog/product');

		$this->load->model('tool/image');

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'p.sort_order';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		if (isset($this->request->get['limit'])) {
			$limit = $this->request->get['limit'];
		} else {
			$limit = $this->config->get('config_product_limit');
		}

		$this->document->setTitle($this->language->get('heading_title'));
if (isset($this->request->get['viewproduct'])) {
			$data['viewproduct'] = $this->request->get['viewproduct'];
		} else {
			$data['viewproduct'] = "product-layout product-list col-xs-12";
		}
		$data['breadcrumbs'] = array();

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('text_home'),
			'href' => $this->url->link('common/home')
		);

		$url = '';

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		if (isset($this->request->get['limit'])) {
			$url .= '&limit=' . $this->request->get['limit'];
		}

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('heading_title'),
			'href' => $this->url->link('product/special', $url)
		);

if (isset($this->request->get['start'])) {
			$start = (int)$this->request->get['start'];
		} else {
			$start = 0;
		}

		$data['heading_title'] = $this->language->get('heading_title');

		$data['text_empty'] = $this->language->get('text_empty');
		$data['text_quantity'] = $this->language->get('text_quantity');
		$data['text_manufacturer'] = $this->language->get('text_manufacturer');
		$data['text_model'] = $this->language->get('text_model');
		$data['text_price'] = $this->language->get('text_price');
		$data['text_tax'] = $this->language->get('text_tax');
		$data['text_points'] = $this->language->get('text_points');
		$data['text_compare'] = sprintf($this->language->get('text_compare'), (isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0));
		$data['text_sort'] = $this->language->get('text_sort');
		$data['text_limit'] = $this->language->get('text_limit');

		$data['button_cart'] = $this->language->get('button_cart');
		$data['button_wishlist'] = $this->language->get('button_wishlist');
		$data['button_compare'] = $this->language->get('button_compare');
		$data['button_list'] = $this->language->get('button_list');
		$data['button_grid'] = $this->language->get('button_grid');
		$data['button_continue'] = $this->language->get('button_continue');
		
		$data['compare'] = $this->url->link('product/compare');

		$data['products'] = array();

		$filter_data = array(
			'sort'  => $sort,
			'order' => $order,
			'start' => $start,
			'limit' => $limit
		);

		$product_total = $this->model_catalog_product->getTotalProductSpecials();

		$results = $this->model_catalog_product->getProductSpecials($filter_data);
$data['endless_status']=$this->config->get('endless_status');
$ajaxdatatotalresult = count($results); //echo $ajaxdatatotalresult;
$settotalproduct=$ajaxdatatotalresult + $start;
$endlesspagination = sprintf($this->language->get('text_pagination'),  1, $settotalproduct, $product_total, ceil($product_total / $limit));
if($results){
		foreach ($results as $result) {
			if ($result['image']) {
				$image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
			} else {
				$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_product_width'), $this->config->get($this->config->get('config_theme') . '_image_product_height'));
			}

			if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
				$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
			} else {
				$price = false;
			}

			if ((float)$result['special']) {
				$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
			} else {
				$special = false;
			}

			if ($this->config->get('config_tax')) {
				$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
			} else {
				$tax = false;
			}

			if ($this->config->get('config_review_status')) {
				$rating = (int)$result['rating'];
			} else {
				$rating = false;
			}

			$data['products'][] = array(
				'product_id'  => $result['product_id'],
				'thumb'       => $image,
				'name'        => $result['name'],
				'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
				'price'       => $price,
				'special'     => $special,
				'tax'         => $tax,
				'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
				'rating'      => $result['rating'],
				'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'] . $url)
			);
		}

} else {   $data=""; }

$response="";
		if (isset($data['products'])) {
			$template = 'product/special_endless';
			$response = array("success" => 1,"totalajaxresult" => $endlesspagination ,"endlesstest" => $ajaxdatatotalresult, "data" => $this->load->view($template, $data));
		} else {
		$response = array("error" => 1);
			}

			$this->response->addHeader('Content-Type: application/json');
			$this->response->setOutput(json_encode($response));
	}]]></add>
        </operation>
  </file>  
<file path="catalog/view/theme/*/template/product/" name="category.tpl,search.tpl,special.tpl">
    
    <operation>
            <search position="replace" ><![CDATA[<div class="image"><a href="<?php echo $product['href']; ?>"><img src="<?php echo $product['thumb']; ?>" alt="<?php echo $product['name']; ?>" title="<?php echo $product['name']; ?>" class="img-responsive" /></a></div>]]></search>
            <add><![CDATA[<div class="image"><?php if(isset($endless_status)){ ?><a href="<?php echo $product['href']; ?>"><img class="lazy" data-original="<?php echo $product['thumb']; ?>" alt="<?php echo $product['name']; ?>" title="<?php echo $product['name']; ?>"  /></a><?php } else { ?><a href="<?php echo $product['href']; ?>"><img src="<?php echo $product['thumb']; ?>" alt="<?php echo $product['name']; ?>" title="<?php echo $product['name']; ?>" class="img-responsive" /></a><?php } ?></div>]]></add>
        </operation>
 	<operation>
            <search position="before" offset="2"><![CDATA[<div class="col-sm-6 text-left"><?php echo $pagination; ?></div>]]></search>
            <add><![CDATA[<?php if(isset($endless_status)){ ?>
<div id="img-lazy"></div>
      </div>
<div class="loader">
   <center>
       <img class="loading-image" src="catalog/view/javascript/irsendless/image/712.gif" alt="loading..">
   </center>
</div>
<div class="pull-right "><span id="endlessajaxshow" ><?php echo $endlesspagination; ?></span></div>
<input id="limit" type="hidden" value="<?php echo $limit; ?>">
<input id="testlimit" type="hidden" value="<?php echo $endlesstotal; ?>">
<input id="triggervalue" type="hidden" value="0"> <?php } else { ?>]]></add>
        </operation>
<operation>
            <search position="after" offset="1"><![CDATA[<div class="col-sm-6 text-right"><?php echo $results; ?></div>]]></search>
            <add><![CDATA[<?php } ?>]]></add>
        </operation>
 </file> 
<file path="catalog/view/theme/*/template/product/category.tpl">
<operation>
            <search position="after"><![CDATA[<?php echo $footer; ?>]]></search>
            <add><![CDATA[<?php if(isset($endless_status)){ ?>
<script type="text/javascript">
$(document).ready(function(){
	$("img.lazy").lazyload();
	 $('.loader').hide();
});
var run=1;
$(window).scroll(function () {
if($(document).height() <= $(window).scrollTop() + $(window).height() + 300 ) { 
		$testlimit = $("#testlimit").val();
		var start = $testlimit;
		var limit =$("#limit").val();
		var filter = "<?php if(isset($_GET['filter'])){ echo $_GET['filter']; } ?>";
		var path = "<?php if(isset($_GET['path'])){ echo $_GET['path']; } ?>";
		var sort = "<?php if(isset($_GET['sort'])){ echo $_GET['sort']; } ?>";
		var order = "<?php if(isset($_GET['order'])){ echo $_GET['order']; } ?>";
		$product_total="<?php echo $product_total ;?>";
		var viewproduct=$('#content .product-layout').attr('class');
if($product_total != $testlimit){
if( run == 1){ //one time trigger the ajax request start
	run =0;
		$.ajax({
			url: "index.php?route=product/category/scrollerAjax",
			data: {limit:limit,start:start,sort:sort,order:order,path:path,filter:filter,viewproduct:viewproduct},
			method: "GET",
			dataType: "JSON",
			beforeSend: function(){
       $('.loader').show()
   },
  complete: function(){
       $('.loader').hide();
  },
			success:function(response){
	if (response['success'] == 1 ) {
			if (response['data']) {
				 $('#img-lazy').before(response['data']);
			}
			$endlesstotalajax=	Number($testlimit) + Number(response['endlesstest']);		
			 $('#testlimit').val( $endlesstotalajax);
			$('#triggervalue').val($endlesstotalajax); 
			$('#endlessajaxshow').html(response['totalajaxresult']); 
			}
				 
		run = 1; }			
			}); // eo ajax
		} //one time trigger the ajax request end
	} 
    		$("img.lazy").lazyload();
      }//fisrst if close
});
</script> <?php } ?>]]></add>
        </operation>

    </file>  
<file path="catalog/view/theme/*/template/product/special.tpl">
		<operation >
			<search position="after"><![CDATA[<?php echo $footer; ?>]]></search>
			<add><![CDATA[<?php if(isset($endless_status)){ ?>
<script type="text/javascript">
$(document).ready(function(){
	$("img.lazy").lazyload();
	 $('.loader').hide();
});
var run=1;
$(window).scroll(function () {
if($(document).height() <= $(window).scrollTop() + $(window).height() + 300 ) { 
	$testlimit = $("#testlimit").val();
        var start = $testlimit;
	var limit =$("#limit").val();
var viewproduct=$('#content .product-layout').attr('class');
		var sort = "<?php if(isset($_GET['sort'])){ echo $_GET['sort']; } ?>";
		var order = "<?php if(isset($_GET['order'])){ echo $_GET['order']; } ?>";
	$product_total="<?php echo $product_total ;?>";
if($product_total != $testlimit){
if( run == 1){ //one time trigger the ajax request start
	run =0;
		$.ajax({
			url: "index.php?route=product/special/scrollerAjax",
			data: {limit:limit,start:start,sort:sort,order:order,viewproduct:viewproduct},
			method: "GET",
			dataType: "JSON",
			beforeSend: function(){
       $('.loader').show()
   },
  complete: function(){
       $('.loader').hide();
  },
			success:function(response){
	if (response['success'] == 1 ) {
			if (response['data']) {
				 $('#img-lazy').before(response['data']);
			}
			$endlesstotalajax=	Number($testlimit) + Number(response['endlesstest']);		
			 $('#testlimit').val( $endlesstotalajax);
				
			$('#triggervalue').val($endlesstotalajax); 
			$('#endlessajaxshow').html(response['totalajaxresult']); 
			}
				 
		run = 1;			
			}// eo success
		}); // eo ajax
		} //one time trigger the ajax request end
	} 
    		$("img.lazy").lazyload();
      }//fisrst if close
});
</script>
 <?php } ?>]]></add>
		</operation>
	</file>
<file path="catalog/view/theme/*/template/product/search.tpl">
		<operation >
			<search position="after"><![CDATA[<?php echo $footer; ?>]]></search>
			<add><![CDATA[<?php if(isset($endless_status)){ ?>
<script type="text/javascript">
$(document).ready(function(){
	$("img.lazy").lazyload();
	 $('.loader').hide();
});
var run=1;
$(window).scroll(function () {
if($(document).height() <= $(window).scrollTop() + $(window).height() + 300 ) {
	$testlimit = $("#testlimit").val();
	$product_total="<?php echo $product_total ;?>";
if($product_total != $testlimit){ 
 		var start = $testlimit;
		var limit =$("#limit").val();
		var search = "<?php if(isset($_GET['search'])){ echo $_GET['search']; } ?>";
		var sort = "<?php if(isset($_GET['sort'])){ echo $_GET['sort']; } ?>";
		var order = "<?php if(isset($_GET['order'])){ echo $_GET['order']; } ?>";
		var description = "<?php if(isset($_GET['description'])){ echo $_GET['description']; } ?>";
		var category_id = "<?php if(isset($_GET['category_id'])){ echo $_GET['category_id']; } ?>";
		var sub_category = "<?php if(isset($_GET['sub_category'])){ echo $_GET['sub_category']; } ?>";
var viewproduct=$('#content .product-layout').attr('class');
	if( run == 1){ //one time trigger the ajax request start
	run =0;
		$.ajax({
			url: "index.php?route=product/search/scrollerAjax",
			data: {limit:limit,start:start,sort:sort,order:order,category_id:category_id,search:search,description:description,sub_category:sub_category,viewproduct:viewproduct},
			method: "GET",
			dataType: "JSON",
			beforeSend: function(){
			       $('.loader').show()
			   },
			  complete: function(){
			       $('.loader').hide();
			  },
			success:function(response){
		if (response['success'] == 1 ) {
			if (response['data']) {
				 $('#img-lazy').before(response['data']);
			}
			$endlesstotalajax=	Number($testlimit) + Number(response['endlesstest']);		
			 $('#testlimit').val( $endlesstotalajax);
			
			$('#triggervalue').val($endlesstotalajax); 
			$('#endlessajaxshow').html(response['totalajaxresult']); 
			run = 1;	
			} 
				
			}// eo success
		}); // eo ajax
		} } 
    		$("img.lazy").lazyload();
      }//fisrst if close
});
</script>
<?php } ?>]]></add>
		</operation>
	</file>

 <file path="admin/controller/extension/module.php">
   	<operation>
            <search position="after" ><![CDATA['name'      => $this->language->get('heading_title'),]]></search>
            <add><![CDATA['display'  => $display_style,]]>
            </add>
        </operation>
<operation>
            <search position="before" ><![CDATA[$data['extensions'][] = array(]]></search>
            <add><![CDATA[$display_style = ($this->language->get('heading_title') == 'Endless Scroller') ? "style=display:none" : "";]]>
            </add>
        </operation>

    </file>


    <!--catalog view file start-->
    <file path="admin/view/template/extension/module.tpl">
        <operation>
            <search position="replace"><![CDATA[<a href="<?php echo $extension['edit']; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary"><i class="fa fa-pencil"></i></a>]]></search>
            <add><![CDATA[<a href="<?php echo $extension['edit']; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary" <?php echo $extension['display']; ?>><i class="fa fa-pencil"></i></a>]]>
            </add>
        </operation>
   </file>

    </modification>
