<modification>
    <id>Holiday and Weekday Master</id>
    <version>2.0</version>
    <vqmver>2.4.1</vqmver>
    <author>IRSSOFT</author>
    <!--admin page-->
    <!--add menu holiday and weekdays to localization-->
    <file path="admin/controller/common/header.php">
        <operation>
            <search position="after"><![CDATA[$this->data['currency'] = $this->url->link('localisation/currency', 'token=' . $this->session->data['token'], 'SSL');]]></search>
            <add><![CDATA[$this->data['holidaymaster'] = $this->url->link('localisation/holidaymaster', 'token=' . $this->session->data['token'], 'SSL');
        $this->data['weekdaymaster'] = $this->url->link('localisation/holidaymaster/weekdays', 'token=' . $this->session->data['token'], 'SSL');]]></add>
        </operation>
    </file>
    <file path="admin/view/template/common/header.tpl">
        <operation>
            <search position="before"><![CDATA[<li><a href="<?php echo $language; ?>"><?php echo $text_language; ?></a></li>]]></search>
            <add><![CDATA[
            <li><a href="<?php echo $holidaymaster; ?>"><?php echo "Holiday Master"; ?></a></li>
            <li><a href="<?php echo $weekdaymaster; ?>"><?php echo "Weekdays Master"; ?></a></li>]]></add>
        </operation>
    </file>

    <file path="admin/controller/sale/order.php">
    <operation>
        <search position="after"><![CDATA[private $error = array();]]></search>
        <add><![CDATA[
               public function getajaxdate(){
        //take holiday date because also disable holiday date

        $this->load->model('sale/order');

        $Holiday_check=$this->model_sale_order->getHolidaydate();
        foreach($Holiday_check as $allday)
        {
            $recursive=$allday['is_recursive'];

            if(strtotime($allday['holiday_date']) >= strtotime(date("d-m-Y")) ){

                $holidays[]=$allday['holiday_date'];
                $date = date("Y");
                $datevalue[]= date("d-m", strtotime($allday['holiday_date'])). "-" .$date ;

            }
            elseif($allday['is_recursive'] == 1){

                $date = date("Y");
                $datevalue[]= date("d-m", strtotime($allday['holiday_date'])). "-" .$date ;

            }
        }
        $this->response->addHeader('Content-Type: application/json');
        $this->response->setOutput(json_encode($datevalue));
    }]]></add>
    </operation>

        <operation>
            <search position="before"><![CDATA[$this->template = 'sale/order_form.tpl';]]></search>
            <add><![CDATA[
              if (isset($this->request->get['order_id'])) {
            $order_id = $this->request->get['order_id'];
        } else {
            $order_id = 0;
        }
        $this->load->model("sale/order");
        $this->data['delivery_date']=$this->model_sale_order->getdeliverydate($order_id);

        if(!empty( $this->data['delivery_date']))
        {
            $date = str_replace('/', '-',$this->data['delivery_date']);
            $this->data['datevaluechange'] = date('d/m/Y', strtotime($date));
        }
        else
        {
            $this->data['datevaluechange'] ='';
        }

        $this->data['minimum_day']=$this->config->get('holidayweekday_min_day');
        $this->data['maximum_day']=$this->config->get('holidayweekday_max_day');
        $this->data['holidayweekday_status']=$this->config->get('holidayweekday_status');

//get disabled week dates...............

        $getdbweekdaysdisable=$this->config->get('weekdays_weekdayslist');

        if(isset($getdbweekdaysdisable)){
            $this->data['getdbdate']=$this->config->get('weekdays_weekdayslist');
        }
        else{
            $this->data['getdbdate']='';
        }
]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[$this->template = 'sale/order_info.tpl';]]></search>
            <add><![CDATA[
             $this->load->model("sale/order");
            $this->data['delivery_date']=$this->model_sale_order->getdeliverydate($order_id);
            $date = str_replace('/', '-',$this->data['delivery_date']);
            $this->data['datevaluechange'] = date('d/m/Y', strtotime($date));
            $this->data['holidayweekday_status']=$this->config->get('holidayweekday_status');
]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[$this->template = 'sale/order_invoice.tpl';]]></search>
            <add><![CDATA[
             if (isset($this->request->get['order_id'])) {
            $order_id = $this->request->get['order_id'];
        } else {
            $order_id = 0;
        }
        $this->load->model("sale/order");
        $this->data['delivery_date']=$this->model_sale_order->getdeliverydate($order_id);
        $date = str_replace('/', '-',$this->data['delivery_date']);
        $this->data['datevaluechange'] = date('d/m/Y', strtotime($date));
        $this->data['holidayweekday_status']=$this->config->get('holidayweekday_status');]]></add>
        </operation>
    </file>

    <!--delivery date show in admin order list-->

    <file path="admin/model/sale/order.php">
        <operation>
            <search position="replace"><![CDATA[$this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET invoice_prefix = '" . $this->db->escape($invoice_prefix) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($store_name) . "',store_url = '" . $this->db->escape($store_url) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', language_id = '" . (int)$this->config->get('config_language_id') . "', currency_id = '" . (int)$currency_id . "', currency_code = '" . $this->db->escape($currency_code) . "', currency_value = '" . (float)$currency_value . "', date_added = NOW(), date_modified = NOW()");]]></search>
            <add><![CDATA[
           if(isset($data['delivery_date'])) {
            $date = str_replace('/', '-', $data['delivery_date']);
            $datevaluechange = date('Y-m-d', strtotime($date));


                $this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET delivery_date = '" . $this->db->escape($datevaluechange) . "',invoice_prefix = '" . $this->db->escape($invoice_prefix) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($store_name) . "',store_url = '" . $this->db->escape($store_url) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', language_id = '" . (int)$this->config->get('config_language_id') . "', currency_id = '" . (int)$currency_id . "', currency_code = '" . $this->db->escape($currency_code) . "', currency_value = '" . (float)$currency_value . "', date_added = NOW(), date_modified = NOW()");
            }
            else{
                $this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET invoice_prefix = '" . $this->db->escape($invoice_prefix) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($store_name) . "',store_url = '" . $this->db->escape($store_url) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', language_id = '" . (int)$this->config->get('config_language_id') . "', currency_id = '" . (int)$currency_id . "', currency_code = '" . $this->db->escape($currency_code) . "', currency_value = '" . (float)$currency_value . "', date_added = NOW(), date_modified = NOW()");
            }
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[$this->db->query("UPDATE `" . DB_PREFIX . "order` SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "',  shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");]]></search>
            <add><![CDATA[
          if(isset($data['delivery_date'])) {
            $date = str_replace('/', '-', $data['delivery_date']);
            $datevaluechange = date('Y-m-d', strtotime($date));

                $this->db->query("UPDATE `" . DB_PREFIX . "order` SET delivery_date = '" . $this->db->escape($datevaluechange) . "',firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "',  shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
            }
            else{
                $this->db->query("UPDATE `" . DB_PREFIX . "order` SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($payment_country) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($payment_zone) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($payment_address_format) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "',  shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($shipping_country) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($shipping_zone) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($shipping_address_format) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', order_status_id = '" . (int)$data['order_status_id'] . "', affiliate_id  = '" . (int)$data['affiliate_id'] . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
            }
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[public function getTotalEmailsByProductsOrdered($products) {]]></search>
            <add><![CDATA[

    public  function getdeliverydate($order_id){

        $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order WHERE order_id = '" . (int)$order_id . "'");

        if(!empty($query->row['delivery_date'])){
            return $query->row['delivery_date'];
        }
        return '';

    }

    public function getHolidaydate() {

        $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "holiday_master");

        return $query->rows;

    }
            ]]></add>
        </operation>


    </file>

    <file path="admin/view/template/sale/order_info.tpl">
        <operation>
            <search position="before" offset="2"><![CDATA[<div id="tab-payment" class="vtabs-content">]]></search>
            <add><![CDATA[
            <?php if($holidayweekday_status == 1) { ?>
            <tr>
                <td><?php echo "Delivery Date"; ?></td>
                <td><?php echo $datevaluechange; ?></td>
            </tr>
            <?php } ?>
            ]]></add>
        </operation>
    </file>

    <!--delivery date show in admin order_invoice-->
    <file path="admin/view/template/sale/order_invoice.tpl">
        <operation>
            <search position="before"><![CDATA[</table></td>]]></search>
            <add><![CDATA[
                   <?php if($holidayweekday_status == 1) { ?>
              <tr>
                  <td><b><?php echo "Delivery Date"; ?></b></td>
                  <td> <?php echo $datevaluechange; ?><br /></td>
              </tr>
                  <?php  } ?>
            ]]></add>
        </operation>
    </file>

    <!--delivery date show in admin order_form-->
    <file path="admin/view/template/sale/order_form.tpl">
    <operation>
        <search position="after" offset="2"><![CDATA[<span class="error"><?php echo $error_shipping_zone; ?></span>]]></search>
        <add><![CDATA[
              <tr>
                  <input type="hidden" id="min_day" value="<?php echo $minimum_day; ?>" />
                  <input type="hidden" id="max_day" value="<?php echo $maximum_day; ?>" />
                  <input type="hidden" id="disable_date" value="<?php echo $getdbdate; ?>" />

                  <?php if($holidayweekday_status == 1) { ?> <div class="form-group">
                      <td> <label class="col-sm-2 control-label" ><?php echo "Delivery Date"; ?></label></td>
                      <div class="col-sm-10">
                          <td> <input type="text" name="delivery_date" value="<?php echo $datevaluechange; ?>"  class="form-control" id="datepick"   /></td>

                      </div>
                  </div><?php } ?>
              </tr>
            ]]></add>
    </operation>
        <operation>
        <search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
        <add><![CDATA[

<script type="text/javascript">
    $(document).ready(function(){

        var min_day=$("#min_day").val();
        var max_day=$("#max_day").val();

        var ddd=new Date();
        var day=1;
        Date.prototype.addDays = function(day) {
            this.setDate(this.getDate() + parseInt(day));
            return this;
        };
        var addonedate=ddd.addDays(day);//add one date to current date because disable date start to next day.


        var today = new Date(addonedate);

        var days=min_day;
        Date.prototype.addDays = function(days) {
            this.setDate(this.getDate() + parseInt(days));
            return this;
        };
        var addDaysdate=today.addDays(days);

        var newDate=addDaysdate.getDate();

        var newmonth=addDaysdate.getMonth()+1;

        var newyear=addDaysdate.getFullYear();

        var min_date=newmonth+"/"+newDate+"/"+newyear;


        var min_date_default=newDate+"/"+newmonth+"/"+newyear;

        //$('#datepick').val(min_date_default);//show default date in picker

        var daysmaximum=max_day-1;
        Date.prototype.addDays = function(daysmaximum) {
            this.setDate(this.getDate() + parseInt(daysmaximum));
            return this;
        };
        var addDaysdatemax=today.addDays(daysmaximum);

        var newDatemax=addDaysdatemax.getDate();

        var newmonthmax=addDaysdatemax.getMonth()+1;

        var newyearmax=addDaysdatemax.getFullYear();



        var max_date=newmonthmax+"/"+newDatemax+"/"+newyearmax;

//take festival holiday disabled
        function getalldates(){
            $data = '';
            $.ajax({
                type: 'POST',
                dataType: 'json',
                async: false,
                url: "index.php?route=sale/order/getajaxdate&token=<?php echo $token; ?>",
                success: function(data){
                    $data = data;
                    // executed on success
                    //alert($data);
                }
            });
            return $data;
        }

        datearray1 = getalldates();


//take weekdays holiday disabled

        var disableweek_date=$('#disable_date').val();
        var array_disableweek_date = JSON.parse("[" + disableweek_date + "]");

        $('#datepick').datepicker({
            dateFormat: 'dd-mm-yy',
            minDate: new Date(min_date),
            maxDate: new Date(max_date),

            beforeShowDay: function(date) {
                //disable week days
                var day = date.getDay();

                var check_date=[true];

                if($.inArray(day,array_disableweek_date) !=-1){
                    check_date=[false];
                }

                //disable holiday days
                var curr_date = date.getDate();
                var curr_month = date.getMonth()+1;

                if (curr_month < 10) {
                    curr_month = "0" + curr_month;
                }
                var curr_year = date.getFullYear();
                var dateString = date.getDate() + "-" + curr_month + "-" + date.getFullYear();

                console.log(dateString);

                if($.inArray(dateString,datearray1) !=-1){
                    //console.log(dateString);
                    check_date=[false];
                }
                return check_date;
            }
        });
    });
</script>]]></add>
    </operation>
</file>

    <!--catalog page-->

    <file path="catalog/controller/checkout/shipping_method.php">
    <operation>
        <search position="before"><![CDATA[public function index() {]]></search>
        <add><![CDATA[

    public function getajaxdate(){

        //take holiday date because also disable holiday date

        $this->load->model('checkout/holidaydate');

        $Holiday_check=$this->model_checkout_holidaydate->getHolidaydate();


        foreach($Holiday_check as $allday)
        {
            if(strtotime($allday['holiday_date']) >= strtotime(date("d-m-Y")) )
            {
                $holidays[]=$allday['holiday_date'];
                $date = date("Y");
                $datevalue[]= date("d-m", strtotime($allday['holiday_date'])). "-" .$date ;
            }
            elseif($allday['is_recursive'] == 1)
            {
                $date = date("Y");
                $datevalue[]= date("d-m", strtotime($allday['holiday_date'])). "-" .$date ;
            }
        }

        $this->response->addHeader('Content-Type: application/json');
        $this->response->setOutput(json_encode($datevalue));
    }
]]></add>
    </operation>
        <operation>
            <search position="after"><![CDATA[public function index() {]]></search>
            <add><![CDATA[
 //mindate and max date from setting table ......

        $this->data['minimum_day']=$this->config->get('holidayweekday_min_day');
        $this->data['maximum_day']=$this->config->get('holidayweekday_max_day');
        $this->data['holidayweekday_status']=$this->config->get('holidayweekday_status');

//get disabled week dates...............

        $getdbweekdaysdisable=$this->config->get('weekdays_weekdayslist');

        if(isset($getdbweekdaysdisable)){
            $this->data['getdbdate']=$this->config->get('weekdays_weekdayslist');
        }
        else{
            $this->data['getdbdate']='';
        }
         ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[public function validate() {]]></search>
            <add><![CDATA[
  //give user preference delivery date
        unset($this->session->data['delivery_date']);

        if(isset($this->request->post['delivery_date'])){
            $this->session->data['delivery_date'] = $this->request->post['delivery_date'];}
         ]]></add>
        </operation>

    </file>

    <file path="catalog/view/theme/*/template/checkout/shipping_method.tpl">
        <operation>
            <search position="before"><![CDATA[<?php if ($error_warning) { ?>]]></search>
            <add><![CDATA[
<?php if($holidayweekday_status == 1) { ?><label class="col-sm-2 control-label" for=""><?php echo "User Preference Date"; ?></label>
<div class="form-group">
    <div class="col-sm-10">
        <input type="text" name="delivery_date"  id="datepick" class="form-control" readonly="true"/>
    </div>
</div>
<?php } ?>
<input type="hidden" id="min_day" value="<?php echo $minimum_day; ?>" />
<input type="hidden" id="max_day" value="<?php echo $maximum_day; ?>" />
<input type="hidden" id="disable_date" value="<?php echo $getdbdate; ?>" />
    ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[<div class="buttons">]]></search>
            <add><![CDATA[
          <script type="text/javascript">
    $(document).ready(function(){

        var min_day=$("#min_day").val();
        var max_day=$("#max_day").val();

        var ddd=new Date();
        var day=1;
        Date.prototype.addDays = function(day) {
            this.setDate(this.getDate() + parseInt(day));
            return this;
        };
        var addonedate=ddd.addDays(day);//add one date to current date because disable date start to next day.

        var today = new Date(addonedate);

        var days=min_day;
        Date.prototype.addDays = function(days) {
            this.setDate(this.getDate() + parseInt(days));
            return this;
        };
        var addDaysdate=today.addDays(days);

        var newDate=addDaysdate.getDate();

        var newmonth=addDaysdate.getMonth()+1;

        var newyear=addDaysdate.getFullYear();

        var min_date=newmonth+"/"+newDate+"/"+newyear;


        var min_date_default=newDate+"/"+newmonth+"/"+newyear;

       // $('#datepick').val(min_date_default);//show default date in picker

        var daysmaximum=max_day-1;
        Date.prototype.addDays = function(daysmaximum) {
            this.setDate(this.getDate() + parseInt(daysmaximum));
            return this;
        };
        var addDaysdatemax=today.addDays(daysmaximum);

        var newDatemax=addDaysdatemax.getDate();

        var newmonthmax=addDaysdatemax.getMonth()+1;

        var newyearmax=addDaysdatemax.getFullYear();



        var max_date=newmonthmax+"/"+newDatemax+"/"+newyearmax;

//take festival holiday disabled
        function getalldates(){
            $data = '';
            $.ajax({
                type: 'POST',
                dataType: 'json',
                async: false,
                url: "index.php?route=checkout/shipping_method/getajaxdate",
                success: function(data){
                    $data = data;

                    // executed on success
                }
            });
            return $data;
        }

        datearray1 = getalldates();

        var disableweek_date=$('#disable_date').val();
        var array_disableweek_date = JSON.parse("[" + disableweek_date + "]");

              $('#datepick').datepicker({
                    dateFormat: 'dd-mm-yy',
                    minDate: new Date(min_date),
                    maxDate: new Date(max_date),

                     beforeShowDay: function(date) {
                         //disable week days
                     var day = date.getDay();

                     var check_date=[true];

                     if($.inArray(day,array_disableweek_date) !=-1){
                        check_date=[false];
                     }

                    //disable holiday days
                     var curr_date = date.getDate();
                     var curr_month = date.getMonth()+1;

                     if (curr_month < 10) {
                         curr_month = "0" + curr_month;
                     }
                     var curr_year = date.getFullYear();
                     var dateString = date.getDate() + "-" + curr_month + "-" + date.getFullYear();

                    console.log(dateString);

                    if($.inArray(dateString,datearray1) !=-1){
                        //console.log(dateString);
                        check_date=[false];
                    }
                    return check_date;
                }
            });
    });
</script>]]></add>
        </operation>
    </file>
    <file path="catalog/controller/checkout/confirm.php">
        <operation>
            <search position="before"><![CDATA[$data['comment'] = $this->session->data['comment'];]]></search>
            <add><![CDATA[
                if(isset($this->session->data['delivery_date']))
                {
                $data['delivery_date'] = $this->session->data['delivery_date'];
                }
			]]></add>
        </operation>
    </file>

    <file path="catalog/model/checkout/order.php">
    <operation>
        <search position="replace"><![CDATA[$this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET invoice_prefix = '" . $this->db->escape($data['invoice_prefix']) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($data['store_name']) . "', store_url = '" . $this->db->escape($data['store_url']) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($data['payment_country']) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($data['payment_zone']) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($data['payment_address_format']) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($data['shipping_country']) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($data['shipping_zone']) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($data['shipping_address_format']) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', total = '" . (float)$data['total'] . "', affiliate_id = '" . (int)$data['affiliate_id'] . "', commission = '" . (float)$data['commission'] . "', language_id = '" . (int)$data['language_id'] . "', currency_id = '" . (int)$data['currency_id'] . "', currency_code = '" . $this->db->escape($data['currency_code']) . "', currency_value = '" . (float)$data['currency_value'] . "', ip = '" . $this->db->escape($data['ip']) . "', forwarded_ip = '" .  $this->db->escape($data['forwarded_ip']) . "', user_agent = '" . $this->db->escape($data['user_agent']) . "', accept_language = '" . $this->db->escape($data['accept_language']) . "', date_added = NOW(), date_modified = NOW()");]]></search>
        <add><![CDATA[
           if(isset($data['delivery_date'])){

            $date = str_replace('/', '-',$data['delivery_date']);
            $datevaluechange = date('Y-m-d', strtotime($date));

        $this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET invoice_prefix = '" . $this->db->escape($data['invoice_prefix']) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($data['store_name']) . "', store_url = '" . $this->db->escape($data['store_url']) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($data['payment_country']) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($data['payment_zone']) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($data['payment_address_format']) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($data['shipping_country']) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($data['shipping_zone']) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($data['shipping_address_format']) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', delivery_date = '" . $this->db->escape($datevaluechange) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', total = '" . (float)$data['total'] . "', affiliate_id = '" . (int)$data['affiliate_id'] . "', commission = '" . (float)$data['commission'] . "', language_id = '" . (int)$data['language_id'] . "', currency_id = '" . (int)$data['currency_id'] . "', currency_code = '" . $this->db->escape($data['currency_code']) . "', currency_value = '" . (float)$data['currency_value'] . "', ip = '" . $this->db->escape($data['ip']) . "', forwarded_ip = '" .  $this->db->escape($data['forwarded_ip']) . "', user_agent = '" . $this->db->escape($data['user_agent']) . "', accept_language = '" . $this->db->escape($data['accept_language']) . "', date_added = NOW(), date_modified = NOW()");
        }
        else {
            $this->db->query("INSERT INTO `" . DB_PREFIX . "order` SET invoice_prefix = '" . $this->db->escape($data['invoice_prefix']) . "', store_id = '" . (int)$data['store_id'] . "', store_name = '" . $this->db->escape($data['store_name']) . "', store_url = '" . $this->db->escape($data['store_url']) . "', customer_id = '" . (int)$data['customer_id'] . "', customer_group_id = '" . (int)$data['customer_group_id'] . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . $this->db->escape($data['payment_company_id']) . "', payment_tax_id = '" . $this->db->escape($data['payment_tax_id']) . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($data['payment_country']) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($data['payment_zone']) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($data['payment_address_format']) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($data['shipping_country']) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($data['shipping_zone']) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($data['shipping_address_format']) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', total = '" . (float)$data['total'] . "', affiliate_id = '" . (int)$data['affiliate_id'] . "', commission = '" . (float)$data['commission'] . "', language_id = '" . (int)$data['language_id'] . "', currency_id = '" . (int)$data['currency_id'] . "', currency_code = '" . $this->db->escape($data['currency_code']) . "', currency_value = '" . (float)$data['currency_value'] . "', ip = '" . $this->db->escape($data['ip']) . "', forwarded_ip = '" .  $this->db->escape($data['forwarded_ip']) . "', user_agent = '" . $this->db->escape($data['user_agent']) . "', accept_language = '" . $this->db->escape($data['accept_language']) . "', date_added = NOW(), date_modified = NOW()");
        }

			]]></add>
    </operation>

        <operation>
            <search position="before"><![CDATA['date_added'              => $order_query->row['date_added']]]></search>
            <add><![CDATA['delivery_date'=> $order_query->row['delivery_date'],]]></add>
        </operation>

<operation>
            <search position="before"><![CDATA[$template->data['link'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id;]]></search>
            <add><![CDATA[$template->data['delivery_date'] = $order_info['delivery_date'];
            $date = str_replace('/', '-',$template->data['delivery_date']);
            $template->data['datevaluechange'] = date('d/m/Y', strtotime($date));
            $template->data['holidayweekday_status']=$this->config->get('holidayweekday_status');]]></add>
        </operation>
</file>

    <file path="catalog/view/theme/*/template/checkout/checkout.tpl">
        <operation>
            <search position="replace"><![CDATA[data: $('#shipping-method input[type=\'radio\']:checked, #shipping-method textarea'),]]></search>
            <add><![CDATA[
data: $('#shipping-method input[type=\'radio\']:checked, #shipping-method textarea,#shipping-method #datepick'),
    ]]></add>
        </operation>
    </file>
    <!--front end delivery date show in catalog order history-->

    <file path="catalog/controller/account/order.php">
        <operation>
            <search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/account/order_info.tpl')) {]]></search>
            <add><![CDATA[
                    if (isset($this->request->get['order_id'])) {
                $order_id = $this->request->get['order_id'];
            } else {
                $order_id = 0;
            }

            $this->load->model("account/order");
            $this->data['delivery_date']=$this->model_account_order->getdeliverydate($order_id);
            $date = str_replace('/', '-',$this->data['delivery_date']);
            $this->data['datevaluechange'] = date('d/m/Y', strtotime($date));
            $this->data['holidayweekday_status']=$this->config->get('holidayweekday_status');
    ]]></add>
        </operation>
    </file>

    <file path="catalog/model/account/order.php">
        <operation>
            <search position="before"><![CDATA[public function getTotalOrderVouchersByOrderId($order_id) {]]></search>
            <add><![CDATA[
                public  function getdeliverydate($order_id){

                $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order WHERE order_id = '" . (int)$order_id . "'");

                if(!empty($query->row['delivery_date'])){
                    return $query->row['delivery_date'];
                }
                return '';
            }
    ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/account/order_info.tpl">
        <operation>
            <search position="replace"><![CDATA[<b><?php echo $text_shipping_method; ?></b> <?php echo $shipping_method; ?>]]></search>
            <add><![CDATA[
            <b><?php echo $text_shipping_method; ?></b> <?php echo $shipping_method; ?>
            <?php } ?>
               <?php if($holidayweekday_status == 1) { ?>
            <br /><b><?php echo "Delivery Date"; ?></b> <?php echo $datevaluechange; ?><br />

    ]]></add>
        </operation>
    </file>
    <!--sent order detail and delivery date through mail-->
    <file path="catalog/view/theme/*/template/mail/order.tpl">
        <operation>
            <search position="replace"><![CDATA[<b><?php echo $text_ip; ?></b> <?php echo $ip; ?><br />]]></search>
            <add><![CDATA[
            <b><?php echo $text_ip; ?></b> <?php echo $ip; ?><br />
             <?php if($holidayweekday_status == 1) { ?>
            <b><?php echo "Delivery Date: "; ?></b> <?php echo $datevaluechange; ?><br />
            <?php } ?>
    ]]></add>
        </operation>
    </file>
</modification>
