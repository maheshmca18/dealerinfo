<modification>
   <name>Irs Order Cancel</name>
    <code>irsordercancel</code>
    <version>2.0</version>
    <authour>IRS SOFT</authour>
	<!-- controller file  -->
	<file path="catalog/controller/account/order.php">
 	<operation>
            <search><![CDATA[$data['button_return'] = $this->language->get('button_return');]]></search>
            <add position="after" offset="1"><![CDATA[$data['ordercancel_status'] = $this->config->get('ordercancel_status');
			$this->load->language('module/cancel');
			$data['cancel_confirm_url'] = $this->url->link('module/cancel', 'order_id=' . $this->request->get['order_id'], 'SSL') ;
			$data['order_status_id'] = $order_info['order_status_id'];
			$data['cancel_confirm'] = $this->language->get('cancel_confirm');
			$data['cancel_cancel'] = $this->language->get('cancel_cancel');
			$data['cancel_cancel_order'] = $this->language->get('cancel_cancel_order');
			$data['cancel_need_help'] = $this->language->get('cancel_need_help');
			$data['cancel_confirmation'] = $this->language->get('cancel_confirmation');
			
			$data['cancel_confirmation_question'] = $this->language->get('cancel_confirmation_question');
			
			$h = $this->config->get('ordercancel_cancel');
			if($h){
				$h='+'.$h.' hour';
			} else {
				$h='+0 hour';
			}
		//	$m=0;
		//	$period = ($h * 60);
			//echo $period; echo "<br>"; echo $order_info['date_added']; echo "<br>";
			$time= strtotime($order_info['date_added']);
		//	echo "<br>";
			$startTime = date("Y-m-d H:i", strtotime($h, $time));
		//	echo $startTime; echo "<br>";
		//	echo strtotime($period . ' minutes ago');
			$currentdatetime=date("Y-m-d H:i");
	


			/*$now = new DateTime();
			echo $now->format('Y-m-d H:i:s');    // MySQL datetime format
			echo $now->getTimestamp();*/

			if($currentdatetime > $startTime ){
				$data['cancel_enable']=0;
			} else {
				$data['cancel_enable']=1;
				//return false;
			}
			$dbdate=date("Y-m-d");
			$ordercancel_returndate=($this->config->get('ordercancel_returndate'))? $this->config->get('ordercancel_returndate'):0;
			$ordercancel_returndate = "+".$ordercancel_returndate." day";
			$this->load->model('module/cancel');
			$completedate=$this->model_module_cancel->getOrdercompletedate($this->request->get['order_id']);
			$date = strtotime($ordercancel_returndate, strtotime($completedate));
			$datecronchange= date("Y-m-d", $date);
			if($dbdate<=$datecronchange){
				$data['return_check']=1;
			} else{
				$data['return_check']=0;
			}]]>
            </add>
        </operation>
		<operation>
            <search><![CDATA[$data['comment'] = nl2br($order_info['comment']);]]></search>
            <add position="before"><![CDATA[//irs order total

			$this->load->model('account/order');
			$data['irs_reasons'] = $this->model_account_order->getOrdercanceldescription();]]>
            </add>
        </operation>
		<operation>
			<search><![CDATA[$product_info = $this->model_catalog_product->getProduct($product['product_id']);]]></search>
			<add position="after"><![CDATA[ $return_details=0;
		 $return_details = $this->model_account_order->getReturnorderdetails($order_id,$product['product_id']);		 
		//$data['return_details'] = $return_details;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA[
		 	'return_details' => $return_details,
			]]></add>
		</operation>
    </file>

    <file path="catalog/model/account/order.php">
 	<operation>
            <search><![CDATA[public function getTotalOrderVouchersByOrderId($order_id) {]]></search>
            <add position="before"><![CDATA[//karthi added
	public function getOrdercanceldescription() {
				
				$pdfinvoice_data = array();

				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "cancel_order ");

				foreach ($query->rows as $result) {
					$pdfinvoice_data[] = $result;
				}
				
				return $pdfinvoice_data;
				
			}
	//for getting the cancel description
	public function getParticularcanceldescription($reason_id) {
				
				 $pdfinvoice_data = array();

        $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "cancel_order WHERE cancel_description_id ='" . (int)$reason_id . "'");

        return $query->row['cance_description'];
				
	}
	public function getReturnorderdetails($order_id,$product_id) {
	
		$query = $this->db->query("SELECT r.return_id FROM " . DB_PREFIX . "return r LEFT JOIN " . DB_PREFIX ."product_description pd ON(pd.name=r.product) WHERE r.order_id ='" . (int)$order_id . "' AND pd.product_id = '" . (int)$product_id . "'");
		
		if(isset($query->row['return_id'])) {
			return 1;
		} else {
			return 0;
		}
	}
	]]>
            </add>
        </operation>
    </file> 
	 
    <file path="catalog/view/theme/default/template/account/order_info.tpl">
        <operation>
            <search><![CDATA[<td class="text-left" colspan="2"><?php echo $text_order_detail; ?></td>]]></search>
            <add position="before"><![CDATA[<?php if($ordercancel_status==1){
            if($order_status_id != 7 && $order_status_id != 3 && $order_status_id != 5){
            if($cancel_enable==1){
            ?>
            <td class="text-left" ><?php echo $text_order_detail; ?></td>
            <td class="text-right" >
              <a  href="#myModal" data-toggle="modal" title="<?php echo $cancel_cancel_order ?>" class="btn btn-danger"><?php echo $cancel_cancel ?></a>
            </td>
            <?php } else { ?>]]>
            </add>
        </operation>

	<operation>
            <search  ><![CDATA[<td class="text-left" colspan="2"><?php echo $text_order_detail; ?></td>]]></search>
            <add position="after"><![CDATA[<?php } }  else { ?>
            <td class="text-left" colspan="2"><?php echo $text_order_detail; ?></td>
            <?php }  } else { ?>
            <td class="text-left" colspan="2"><?php echo $text_order_detail; ?></td>
            <?php } ?>]]>
            </add>
        </operation>
		<operation>
            <search><![CDATA[<a href="<?php echo $product['return']; ?>" data-toggle="tooltip" title="<?php echo $button_return; ?>" class="btn btn-danger"><i class="fa fa-reply"></i></a></td>]]></search>
            <add position="replace"><![CDATA[<?php if($ordercancel_status==1){
                // if($order_status_id == 5){  if($return_check == 1) {
				 ?>
				 <?php if($order_status_id == 5 && $product['return_details'] == 0 && $return_check == 1) { ?>
                <a href="<?php echo $product['return']; ?>" data-toggle="tooltip" title="<?php echo $button_return; ?>" class="btn btn-danger"><i class="fa fa-reply"></i></a>
                <?php  }} else { ?>
                <a href="<?php echo $product['return']; ?>" data-toggle="tooltip" title="<?php echo $button_return; ?>" class="btn btn-danger"><i class="fa fa-reply"></i></a>
                <?php } ?>
              </td>]]>
            </add>
        </operation>
		<operation>
            <search><![CDATA[<?php echo $footer; ?>]]></search>
            <add position="before"><![CDATA[<div class="container">
  <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <center> <label style="font-size: 20px;"><?php echo $cancel_confirmation ?></label>
          </center>
        </div>
        <div class="modal-body">

		<form name="order-cancel-form" method="post" action="<?php echo $cancel_confirm_url; ?>" class="form-horizontal">
          <fieldset>
           
				<div class="row">
				<div class="col-sm-12" >
			  
                <?php echo $cancel_confirmation_question ?>
				
				</div>	
				</div>

               <!-- for chhosing reasons-->
               <div class="form-group  required">
                 <label class="col-sm-3 control-label"><?php echo "Choose reason";//$entry_reason; ?></label>
                 <div class="col-sm-8">
                   <?php $temp = 0; ?>
                   <?php foreach ($irs_reasons as $return_reason) { ?>
                   <div class="radio">
                     <label>
                       <?php if($temp == 0){ ?>
                       <input type="radio" name="cancel_reason_id" value="<?php echo $return_reason['cancel_description_id']; ?>" checked="checked"/>
                       <?php echo $return_reason['cance_description']; ?></label>
                     <?php } else { ?>
                     <input type="radio" name="cancel_reason_id" value="<?php echo $return_reason['cancel_description_id']; ?>" />
                     <?php echo $return_reason['cance_description']; ?></label>
                     <?php } ?>
                   </div>
                   <?php $temp++;  } ?>
                 </div>
               </div>

         
          </fieldset>
		  
        </div>
        <div class="modal-footer">
		<button type="submit" class="btn btn-danger"><?php echo $cancel_confirm ?></button>
          <button type="button" class="btn btn-primary btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
</form>
    </div>
  </div>
</div>]]>
            </add>
        </operation>
    </file>
	
	<file path="catalog/controller/account/return.php">
		<operation>
			<search><![CDATA[$return_id = $this->model_account_return->addReturn($this->request->post);]]></search>
			<add position="after"><![CDATA[
			    //for getting the information for return
			    $return_details = $this->model_account_return->getReturn($return_id);
				$this->send_email_to_customer($this->request->post,$return_id,$return_details);
				$this->send_email_to_admin($this->request->post,$return_id,$return_details);
			]]></add>
		</operation>
        <operation>
            <search><![CDATA[protected function validate() {]]></search>
            <add position="before"><![CDATA[
				/**
     * for return customer mail
     */
    private function send_email_to_customer($return_info,$return_id,$return_details){

		$this->load->language('account/return');
		//for processsing the returnerd details

		    $data['return_id'] = $return_details['return_id'];
			$details_order_id = $return_details['order_id'];
			$details_date_ordered = date($this->language->get('date_format_short'), strtotime($return_details['date_ordered']));
			$details_date_added = date($this->language->get('date_format_short'), strtotime($return_details['date_added']));
			$details_firstname = $return_details['firstname'];
			$details_lastname = $return_details['lastname'];
			$details_email = $return_details['email'];
			$details_telephone = $return_details['telephone'];
			$details_product = $return_details['product'];
			$details_model = $return_details['model'];
			$details_quantity = $return_details['quantity'];
			$details_reason = $return_details['reason'];
			$details_opened= $return_details['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no');
			$details_comment = nl2br($return_details['comment']);
			$details_action = $return_details['action'];
			$details_status = $return_details['status'];
			//for getting customer id

			//
		$this->load->language('module/cancel');

		// to get base url of site
		$store_url = $this->config->get('config_url');
        /*
         * Email
         */

        $find    = array('{return_id}','{store_name}','{store_url}','{date_added}','{return_reason}','{return_status}','{comment}','{order_id}','{date_ordered}','{product}','{quantity}','{opened}','{firstname}','{lastname}','{email}','{telephone}','{model}');

        $replace = array('return_id' => $return_id,'store_name' => $this->config->get('config_name'),'store_url' => $this->config->get('config_name'), 'date_added' => $details_date_added,'return_reason' => $details_reason,'return_status' => $details_status, 'comment' => $details_comment, 'order_id' => $details_order_id,'date_ordered' => $details_date_ordered,'product' => $details_product, 'quantity' => $details_quantity,'opened' => $details_opened,'firstname' => $details_firstname,'lastname' => $details_lastname, 'email' => $details_email, 'telephone' =>$details_telephone, 'model'=> $details_model);
        //
        $subject = str_replace($find, $replace,  $this->language->get('return_customer_email_subject'));

        // Text
         $text = str_replace($find, $replace,  $this->config->get('ordercancel_returnusermessagecontent'));
        //$text  = $this->config->get('ordercancel_returnusermessagecontent'). "\n\n";


       // $text  .= $this->language->get('cancel_order').$return_info['order_id']. '<br>';
      //  $this->load->model('localisation/return_reason');

       /* //for getting reason
        $return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_info['return_reason_id']);
				if (!empty($return_reason_info['name'])) {
					$text .= $this->language->get('reason_for_return') . $this->db->escape($return_reason_info['name']) . "\n";
				}
				*/


        if (VERSION < '2.0.2.0' || VERSION == '2.0.3.1') {
					$mail = new Mail($this->config->get('config_mail'));
        }else{
			$mail = new Mail();
		}
            $mail->protocol = $this->config->get('config_mail_protocol');
            $mail->parameter = $this->config->get('config_mail_parameter');
            $mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
            $mail->smtp_username = $this->config->get('config_mail_smtp_username');
            $mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
            $mail->smtp_port = $this->config->get('config_mail_smtp_port');
            $mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');

        $mail->setTo($return_info['email']);
        $mail->setFrom($this->config->get('config_email'));
        $mail->setReplyTo($this->config->get('config_email'));
        $mail->setSender($this->config->get('config_name'));
        $mail->setSubject($subject);
        $mail->setHtml(html_entity_decode($text, ENT_QUOTES, 'UTF-8'));
        $mail->send();
    }
    /**
     *
     */
    private function send_email_to_admin($return_info,$return_id,$return_details){

		//

		$this->load->language('account/return');
		//for processsing the returnerd details

		    $data['return_id'] = $return_details['return_id'];
			$details_order_id = $return_details['order_id'];
			$details_date_ordered = date($this->language->get('date_format_short'), strtotime($return_details['date_ordered']));
			$details_date_added = date($this->language->get('date_format_short'), strtotime($return_details['date_added']));
			$details_firstname = $return_details['firstname'];
			$details_lastname = $return_details['lastname'];
			$details_email = $return_details['email'];
			$details_telephone = $return_details['telephone'];
			$details_product = $return_details['product'];
			$details_model = $return_details['model'];
			$details_quantity = $return_details['quantity'];
			$details_reason = $return_details['reason'];
			$details_opened= $return_details['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no');
			$details_comment = nl2br($return_details['comment']);
			$details_action = $return_details['action'];
			//
		$this->load->language('module/cancel');
            //to get the customer details
            $customer_id = $this->customer->getId();
		// to get base url of site
		$store_url = $this->config->get('config_url');
        /*
         * Email
         */

        $find    = array('{return_id}','{store_name}','{store_url}','{date_added}','{return_reason}','{return_status}','{comment}','{order_id}','{date_ordered}','{product}','{quantity}','{opened}','{firstname}','{lastname}','{email}','{telephone}','{model}','{customer_id}');

        $replace = array('return_id' => $return_id,'store_name' => $this->config->get('config_name'),'store_url' => $this->config->get('config_name'), 'date_added' => $details_date_added,'return_reason' => $details_reason,'return_status' => $details_status, 'comment' => $details_comment, 'order_id' => $details_order_id,'date_ordered' => $details_date_ordered,'product' => $details_product, 'quantity' => $details_quantity,'opened' => $details_opened,'firstname' => $details_firstname,'lastname' => $details_lastname, 'email' => $details_email, 'telephone' =>$details_telephone,'model'=>$details_model,'customer_id'=> $customer_id );

         $text = str_replace($find, $replace,   $this->config->get('ordercancel_returnadminmessagecontent'));

		$this->load->language('module/cancel');

        $subject = sprintf($this->language->get('return_admin_email_subject') . $return_id);
         //for getting reason

		// Text
       // $text  = $this->config->get('ordercancel_returnadminmessagecontent'). '<br>';

        //$text  .= $this->language->get('return_order').$return_id. '<br>';
       /*
        $this->load->model('localisation/return_reason');
         $return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_info['return_reason_id']);
				if (!empty($return_reason_info['name'])) {
					//$text .= 'Reason for Return: ' . $this->db->escape($return_reason_info['name']) . "\n";
					$text .= $this->language->get('reason_for_return') . $this->db->escape($return_reason_info['name']) . "\n";
				}
				*/

        $config_email = $this->config->get('config_mail');
            $mail = new Mail($this->config->get('config_mail'));

            $mail->protocol = $this->config->get('config_mail_protocol');
            $mail->parameter = $this->config->get('config_mail_parameter');
            $mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
            $mail->smtp_username = $this->config->get('config_mail_smtp_username');
            $mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
            $mail->smtp_port = $this->config->get('config_mail_smtp_port');
            $mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');

        $mail->setTo($this->config->get('config_email'));
        $mail->setFrom($this->config->get('config_email'));
        $mail->setReplyTo($this->config->get('config_email'));
        $mail->setSender($this->config->get('config_name'));
        $mail->setSubject($subject);
        $mail->setHtml( html_entity_decode($text, ENT_QUOTES, 'UTF-8'));
        $mail->send();
    }
			]]></add>
        </operation>
	</file>

    </modification>