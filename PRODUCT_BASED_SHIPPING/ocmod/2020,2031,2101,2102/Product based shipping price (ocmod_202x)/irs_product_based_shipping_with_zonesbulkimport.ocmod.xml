<modification>
    <name>irs_product_based_shipping_with_zonesbulkimport</name>
    <version>1.1</version>
    <author>IRSSOFT</author>
    <code>irs_product_based_shipping_with_zonesbulkimport</code>
    <link>www.irssoft.com</link>

	<file path="admin/controller/common/menu.php">
		<operation>
		    <search><![CDATA[$data['text_openbay_order_import'] = $this->language->get('text_openbay_order_import');]]></search>
		    <add position="after"><![CDATA[$data['productshipping'] = $this->url->link('localisation/productshipping', 'token=' . $this->session->data['token'], 'SSL');]]></add>
		</operation> 
	</file>
	<file path="admin/view/template/common/menu.tpl">
		<operation>
		    <search><![CDATA[<li><a href="<?php echo $location; ?>"><?php echo $text_location; ?></a></li>]]></search>
		    <add position="before"><![CDATA[<li><a href="<?php echo $productshipping; ?>"><?php echo "Product Based Shipping"; ?></a></li>]]></add>
		</operation> 
	</file>

    <file path="admin/controller/catalog/product.php">
	<operation>
            <search><![CDATA[if (isset($this->request->post['price'])) {]]></search>
            <add position="before"><![CDATA[$data['zonename_arrays'] = array();

		$zonename_arrays = $this->model_catalog_product->zonename_arrays();

		foreach($zonename_arrays as $zonename_array){
		$data['zonename_arrays'][] = array(
			'product_basedshipping_id' => $zonename_array['product_basedshipping_id'],
			'zone_name'  => $zonename_array['zone_name'],
			'status'  => $zonename_array['status'],
		);
     	}

		if (isset($this->request->post['product_basedshipping_id'])) {
			$data['product_basedshipping_id'] = $this->request->post['product_basedshipping_id'];
		} elseif (!empty($product_info)) {
			$data['product_basedshipping_id'] = $product_info['product_basedshipping_id'];
		} else {
			$data['product_basedshipping_id'] = '';
		}

		$explode_ids=explode(',',$data['product_basedshipping_id']);
		//print_r($explode_ids);exit;


		if (isset($this->request->post['shippingprice'])) {
			$data['shippingprice'] = $this->request->post['shippingprice'];
		} elseif (!empty($product_info)) {
			$data['shippingprice'] = $product_info['shippingprice'];
		} else {
			$data['shippingprice'] = '';
		}]]></add>
        </operation> 
    </file>
    <file path="admin/model/catalog/product.php">
	<operation>
            <search><![CDATA[public function addProduct($data) {]]></search>
            <add position="before"><![CDATA[public function zonename_arrays() {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_based_shipping");

		return $query->rows;
	}]]></add>
        </operation> 

	<operation>
            <search><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW()");]]></search>
            <add position="replace"><![CDATA[$product_basedshipping_id=implode(',',$data['product_basedshipping_id']);
if($data['product_basedshipping_id']){ 
		$this->db->query("INSERT INTO " . DB_PREFIX . "product SET product_basedshipping_id = '" . $product_basedshipping_id . "',shippingprice = '" . $this->db->escape($data['shippingprice']) . "',model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW()");
} else {
$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW()");
}]]></add>
        </operation> 

	<operation>
            <search><![CDATA[$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");]]></search>
            <add position="replace"><![CDATA[$product_basedshipping_id=implode(',',$data['product_basedshipping_id']);
if($data['product_basedshipping_id']){ 
		$this->db->query("UPDATE " . DB_PREFIX . "product SET product_basedshipping_id = '" . $product_basedshipping_id . "',shippingprice = '" . $this->db->escape($data['shippingprice']) . "',model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");
} else {
$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . (int)$data['tax_class_id'] . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");
}]]></add>
        </operation> 
    </file>

    <file path="admin/view/template/catalog/product_form.tpl">
	<operation>
            <search><![CDATA[<label class="col-sm-2 control-label" for="input-tax-class"><?php echo $entry_tax_class; ?></label>]]></search>
            <add position="before" offset="1"><![CDATA[<div class="form-group">
                <label class="col-sm-2 control-label" for="input-zonename"><?php echo "Zone Name"; ?></label>
                <div class="col-sm-10" style="width:40%;height: 100px;overflow-y: auto;;background-color: #f2f1f0;">
                  <?php
                   $explode_ids=explode(',',$data['product_basedshipping_id']);
                   foreach($zonename_arrays as $zonename_array) {
                     if(in_array($zonename_array['product_basedshipping_id'],$explode_ids)){
                         $checked='checked="checked"';
                     }
                     else{
                        $checked="";
                     }
                  ?>
                  <input  type="checkbox" name="product_basedshipping_id[]" <?php echo $checked;?>  value="<?php echo $zonename_array['product_basedshipping_id']; ?>"  > <?php echo $zonename_array['zone_name']; ?><br>
                  <?php } ?>
                </div>
              </div>

              <div class="form-group">
                <label class="col-sm-2 control-label" for="input-price"><?php echo "Shipping Price"; ?></label>
                <div class="col-sm-10">
                  <input type="text" name="shippingprice" value="<?php echo $shippingprice; ?>" placeholder="<?php echo "Shipping Price"; ?>" id="input-price" class="form-control" />
                </div>
              </div>]]></add>
        </operation> 
    </file>


    <file path="catalog/controller/product/product.php">
	<operation>
            <search><![CDATA[public function index() {]]></search>
            <add position="before"><![CDATA[public function ajaxpostcode_check() {

		$product_id=$this->request->post['product_id'];

		$user_enter_postcode=$this->request->post['postcode'];

		$this->load->model('catalog/product');

		$postcode_availability=$this->model_catalog_product->selectProductbasedshippingid($product_id,$user_enter_postcode);

		if(!empty($postcode_availability)){
			$status=1;
			$data['delivery_available']="Available for shipping charge at your location ".  $this->currency->format($postcode_availability);
		}
		else{
			$data['delivery_available']="Not available shipping charge";
		}

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($data));

	}]]></add>
        </operation> 

	<operation>
            <search><![CDATA[public function index() {]]></search>
            <add position="after"><![CDATA[$data['product_id'] = (int)$this->request->get['product_id'];]]></add>
        </operation> 
    </file>

   
    <file path="catalog/model/catalog/product.php">
	<operation>
            <search><![CDATA[public function updateViewed($product_id) {]]></search>
            <add position="before"><![CDATA[public function selectProductbasedshippingid($product_id,$user_enter_postcode){
		$query1 = $this->db->query("SELECT product_basedshipping_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
if($query1->row['product_basedshipping_id']) { 
		$query = $this->db->query("SELECT pbs.product_basedshipping_id FROM " . DB_PREFIX . "shipping_zone sz LEFT JOIN " . DB_PREFIX . "product_based_shipping pbs ON(sz.product_basedshipping_id=pbs.product_basedshipping_id) WHERE pbs.product_basedshipping_id IN(".$query1->row['product_basedshipping_id'].") AND sz.postcode = '" . (int)$user_enter_postcode . "'");

		$query2="";

		if($query->row){
			$query2 = $this->db->query("SELECT shippingprice FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
		}

		if($query2){
			return $query2->row['shippingprice'];

		}
		else{
			return "";
		}
}
else{
return "";
}

	}]]></add>
        </operation> 
    </file>   

    <file path="catalog/view/theme/*/template/product/product.tpl">   
	<operation>
            <search><![CDATA[<div id="product">]]></search>
            <add position="before"><![CDATA[<div class="form-group">
            <?php echo "Check Shipping Charge"; ?>

            <input type="text" name="postcode_check_availability" id="postcode_check"   value="<?php //echo $postcode; ?>" placeholder="<?php echo 'Enter pincode'; ?>" />

            <button type="submit"  title="<?php echo 'Check Postcode'; ?>" id="check_pincode"><?php echo "Check"; ?> </button><br>

            <div id="shipping_charge" class="alert-danger">

            </div>]]></add>
        </operation> 

	<operation>
            <search><![CDATA[$('select[name=\'recurring_id\'], input[name="quantity"]').change(function(){]]></search>
            <add position="before" offset="1"><![CDATA[<script type="text/javascript">
    $(document).ready(function(){
        $("#check_pincode").on("click",function(){
           var postcode=$("#postcode_check").val();
            var product_id="<?php echo $product_id;  ?>";

            if(postcode){
                $.ajax({
                    type:'POST',
                    datatype:'json',
                    async:false,
                    data: {postcode: postcode,product_id:product_id},
                    url:"index.php?route=product/product/ajaxpostcode_check",
                    success:function(data) {
                        var passingtoHTML = "";
                        passingtoHTML += "<table border='1' class='update-table table table-striped table-bordered table-hover' width='100%' > ";

                            passingtoHTML += "<tr class='record'>";

                            passingtoHTML += "<td width='20%'>" + data.delivery_available + "</td>";

                            passingtoHTML += "</tr>";

                        $('#shipping_charge').html(passingtoHTML);

                    }//end success
                });//end ajax

            } else{
                   var passingtoHTML = "";
                   passingtoHTML += "Please Enter Postcode";
                $('#shipping_charge').html(passingtoHTML);
            }

        });
    });

</script>]]></add>
        </operation> 
    </file>


    <file path="catalog/model/checkout/order.php">
	<operation>
            <search><![CDATA[public function addOrder($data) {]]></search>
            <add position="before"><![CDATA[public function selectProductbasedshippingid($product_id,$user_enter_postcode){
	
		$query1 = $this->db->query("SELECT product_basedshipping_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
if($query1->row['product_basedshipping_id']) { 
		$query = $this->db->query("SELECT pbs.product_basedshipping_id FROM " . DB_PREFIX . "shipping_zone sz LEFT JOIN " . DB_PREFIX . "product_based_shipping pbs ON(sz.product_basedshipping_id=pbs.product_basedshipping_id) WHERE pbs.product_basedshipping_id IN(".$query1->row['product_basedshipping_id'].") AND sz.postcode = '" . (int)$user_enter_postcode . "'");

		$query2="";

		if($query->row){
			$query2 = $this->db->query("SELECT shippingprice FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
		}

		if($query2){
			return $query2->row['shippingprice'];
		}
		else{
			$return=0;
			return $return;
		}
	}
	else{
		    $return=0;
			return $return;
	}
	}

public function productAvailablepostcodevalidation($product_id,$user_enter_postcode){
	
		$query1 = $this->db->query("SELECT product_basedshipping_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
if($query1->row['product_basedshipping_id']) { 
		$query = $this->db->query("SELECT pbs.product_basedshipping_id FROM " . DB_PREFIX . "shipping_zone sz LEFT JOIN " . DB_PREFIX . "product_based_shipping pbs ON(sz.product_basedshipping_id=pbs.product_basedshipping_id) WHERE pbs.product_basedshipping_id IN(".$query1->row['product_basedshipping_id'].") AND sz.postcode = '" . (int)$user_enter_postcode . "'");

		$query2="";

			if($query->row){
				$query2 = $this->db->query("SELECT product_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
			}

			if($query2->row['product_id']){
				$return=1;
				return $return;
				
			}
			else{
				$return=0;
				return $return;
			}
	}
	else{
		    $return=0;
			return $return;
		}
	}
]]></add>
        </operation> 
    </file>

<file path="catalog/controller/checkout/shipping_method.php">
		<operation>
		    <search><![CDATA[if (!isset($this->request->post['shipping_method'])) {]]></search>
		    <add position="before"><![CDATA[foreach ($products as $product) {			
$this->load->model('checkout/order');
			$shipping_info = $this->model_checkout_order->productAvailablepostcodevalidation($product['product_id'], $this->session->data['shipping_address']['postcode']);			
			
			if($shipping_info==0){
				$json['error']['warning'] = "Some product not available for this postcode";
			}	
			
		}]]></add>
		</operation> 
	</file>

	<file path="catalog/controller/checkout/shipping_address.php">
		<operation>
		    <search><![CDATA[if (isset($this->request->post['shipping_address']) && $this->request->post['shipping_address'] == 'existing') {]]></search>
		    <add position="before" offset="1"><![CDATA[foreach ($products as $product) {			
$this->load->model('checkout/order');
				$shipping_info = $this->model_checkout_order->productAvailablepostcodevalidation($product['product_id'], $this->request->post['postcode']);
			
			
			if($shipping_info==0){
				$json['error']['warning'] = "Some product not available for this postcode";
			}	
			
		}	]]></add>
		</operation> 
	</file>

</modification>
